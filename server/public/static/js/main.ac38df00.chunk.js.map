{"version":3,"sources":["classes/Instrument.class.js","classes/BasicSynth.class.js","classes/Sampler.class.js","classes/Song.class.js","components/PianoRollComponent.jsx","components/SynthComponent.jsx","components/SequencerComponent.jsx","components/DrumSamplerComponent.jsx","components/ControlsBar.jsx","components/VisualizerComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["Instrument","id","_this","this","Object","classCallCheck","activateInstrument","active","sequence","mute","updateSequence","notes","length","forEach","note","idx","remove","add","Tone","Sequence","time","instrument","triggerAttackRelease","Array","fill","BasicSynth","oscType","possibleConstructorReturn","getPrototypeOf","call","updateInstrument","props","oscillator","type","envelope","attack","decay","sustain","release","getSynthData","Synth","toMaster","Sampler","style","arguments","undefined","preload","sampler","C3","concat","C#3","D3","D#3","E3","F3","F#3","loaded","getSamplerData","Song","init","Transport","bpm","value","tempo","play","console","log","state","start","playInstruments","stop","updateTempo","newTempo","addBasicSynth","instruments","synths","push","getSynths","getSynth","updateSynth","updateSynthSequence","activateSynth","addSampler","samplers","getSamplers","getSampler","updateSampler","updateSamplerSequence","activateSampler","schedule","exportSongData","toConsumableArray","map","synth","loadSongData","songData","PianoRollComponent","noteScaleStr","replace","_this2","table","react_default","a","createElement","className","colSpan","onClick","clear","scale","initialScale","i","row","step","key","j","classNameString","noteAndScale","noteScaleArr","toNoteScaleArr","e","activateCell","element","target","getAttribute","newSequence","_this$toNoteScaleArr","_this$toNoteScaleArr2","slicedToArray","stepNote","stepScale","setState","objectSpread","createTable","Component","SynthComponent","oscTypes","envKey","newValue","newEnvelope","_this3","newOscillator","currentTarget","_this4","_this$state$envelope","colors","envelopeControls","react_switch_default","onChange","checked","htmlFor","name","updateOscillator","toUpperCase","lib_default","d","s","r","border","height","width","entries","dist","radius","updateEnvelope","strokeWidth","stroke","substring","PianoRollComponent_PianoRollComponent","n","keys","values","SequencerComponent","isArray","includes","indexOf","filter","el","DrumSamplerComponent","SequencerComponent_SequencerComponent","ControlsBar","playButton","isPlaying","min","max","updateSongTempo","react_router_dom","to","OrbitControls","require","THREE","VisualizerComponent","epilepsyMode","toggleEpilepsyMode","draw","bassValue","Math","abs","analyser","getValue","iteration","sphere","set","rotation","y","renderer","render","scene","camera","requestAnimationFrame","Analyser","controls","Master","connect","V_WIDTH","window","innerWidth","V_HEIGHT","innerHeight","position","setSize","document","querySelector","appendChild","domElement","sphereGeometry","sphereMaterial","color","wireframe","x","z","Fragment","App","song","JSON","stringify","parse","newSong","synthData","_synthData","samplerData","SynthComponent_SynthComponent","assign","DrumSamplerComponent_DrumSamplerComponent","addNewBasicSynth","addNewSampler","renderSynthsSection","renderSamplerSection","_this5","ControlsBar_ControlsBar","updateSongtempo","react_router","path","component","renderCreationSection","React","Boolean","location","hostname","match","ReactDOM","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac38df00.chunk.js","sourcesContent":["import Tone from \"tone\";\n\nexport default class Instrument {\n  constructor(id) {\n    this.id = id;\n    this.instrument = null;\n    this.sequence = null;\n    this.active = false;\n    this.notes = new Array(16).fill(null);\n  }\n\n  activateInstrument = () => {\n    if (this.active) {\n      if (this.sequence) {\n        this.sequence.mute = true;\n      }\n    } else {\n      if (this.sequence) {\n        this.sequence.mute = false;\n      }\n    }\n    this.active = !this.active;\n  };\n\n  updateSequence = notes => {\n    this.notes = notes;\n    if (this.sequence && notes.length !== 0) {\n      notes.forEach((note, idx) => {\n        this.sequence.remove(idx);\n        this.sequence.add(idx, note);\n      });\n    } else {\n      this.sequence = new Tone.Sequence(\n        (time, note) => {\n          if (this.instrument) this.instrument.triggerAttackRelease(note, \"10hz\", time);\n        },\n        notes,\n        \"16n\"\n      );\n    }\n    (!this.active) ? this.sequence.mute = true : this.sequence.mute = false;\n  };\n}\n","import Tone from \"tone\";\nimport Instrument from \"./Instrument.class\";\n\nexport default class BasicSynth extends Instrument {\n  constructor(id, oscType) {\n    super(id);\n    this.instrument = new Tone.Synth(oscType).toMaster();\n  }\n\n  updateInstrument = props => {\n    this.instrument.oscillator.type = props.oscillator.type;\n    this.instrument.envelope.attack = props.envelope.attack;\n    this.instrument.envelope.decay = props.envelope.decay;\n    this.instrument.envelope.sustain = props.envelope.sustain;\n    this.instrument.envelope.release = props.envelope.release;\n    return this.instrument;\n  };\n\n  getSynthData = () => {\n    return {\n      notes: this.notes,\n      oscillator: {type: this.instrument.oscillator.type},\n      envelope: {\n        attack: this.instrument.envelope.attack,\n        decay: this.instrument.envelope.decay,\n        sustain: this.instrument.envelope.sustain,\n        release: this.instrument.envelope.release\n      }\n    }\n  }\n}\n","import Tone from \"tone\";\nimport Instrument from \"./Instrument.class\";\n\nexport default class Sampler extends Instrument {\n  constructor(id, style = \"house\") {\n    super(id);\n    this.style = style;\n    this.loaded = false;\n    this.preload(style);\n  }\n\n  updateInstrument = style => {\n    this.preload(style);\n  };\n\n  preload = style => {\n    let sampler = new Tone.Sampler(\n      {\n        C3: `${style}/kick.wav`,\n        \"C#3\": `${style}/snare.wav`,\n        D3: `${style}/hihat.wav`,\n        \"D#3\": `${style}/openhihat.wav`,\n        E3: `${style}/crash.wav`,\n        F3: `${style}/ride.wav`,\n        \"F#3\": `${style}/perc.wav`\n      },\n      () => {\n        this.loaded = true;\n        this.instrument = sampler.toMaster();\n      },\n      \"./samples/\"\n    );\n  };\n\n  getSamplerData = () => {\n    return {\n      notes: this.notes,\n      style: this.style\n    }\n  }\n}\n","import Tone from \"tone\";\nimport BasicSynth from \"./BasicSynth.class.js\";\nimport Sampler from \"./Sampler.class.js\";\n\nclass Song {\n  constructor() {\n    this.tempo = 130;\n    this.instruments = {\n      synths: [],\n      samplers: []\n    };\n    this.init();\n  }\n\n  init = () => {\n    Tone.Transport.bpm.value = this.tempo;\n  }\n\n  play = () => {\n    console.log(\"playing...\");\n    if(Tone.Transport.state === \"stopped\") {Tone.Transport.start(); this.playInstruments()}\n  };\n\n  stop = () => {\n    console.log(\"stopped\");\n      if(Tone.Transport.state === \"started\") Tone.Transport.stop();\n  };\n\n  updateTempo = (newTempo) => {\n    this.tempo = newTempo;\n    Tone.Transport.bpm.value = this.tempo;\n  }\n\n  //SYNTHS\n  addBasicSynth = (id, type = \"triangle\") => {\n    this.instruments.synths.push(new BasicSynth(id, type));\n    return this.getSynths();\n  };\n\n  getSynths = () => {\n    return this.instruments.synths;\n  };\n\n  getSynth = idx => {\n    return this.instruments.synths[idx];\n  };\n\n  updateSynth = (idx, props) => {\n    return this.instruments.synths[idx].updateInstrument(props);\n  };\n\n  updateSynthSequence = (idx, notes) => {\n    this.instruments.synths[idx].updateSequence(notes);\n  };\n\n  activateSynth = idx => {\n    this.instruments.synths[idx].activateInstrument();\n  };\n\n  //SAMPLERS\n  addSampler = (id, style = \"house\") => {\n    this.instruments.samplers.push(new Sampler(id, style));\n    return this.getSamplers();\n  };\n\n  getSamplers = () => {\n    return this.instruments.samplers;\n  };\n\n  getSampler = idx => {\n    return this.instruments.samplers[idx];\n  };\n\n  updateSampler = (idx, style) => {\n    return this.instruments.samplers[idx].updateInstrument(style);\n  };\n\n  updateSamplerSequence = (idx, notes) => {\n    this.instruments.samplers[idx].updateSequence(notes);\n  };\n\n  activateSampler = idx => {\n    this.instruments.samplers[idx].activateInstrument();\n  };\n\n  playInstruments = () => {\n    this.instruments.synths\n    .concat(this.instruments.samplers)\n    .forEach(instrument => {\n      Tone.Transport.schedule((time) => {\n        if(instrument && instrument.sequence){\n          instrument.sequence.start();\n        }\n      }, '0:0');\n    });\n  };\n\n  exportSongData = () => {\n    const synths = [...this.instruments.synths].map(synth => synth.getSynthData());\n    const samplers = [...this.instruments.samplers].map(sampler => sampler.getSamplerData());\n    return {\n      tempo: this.tempo,\n      instruments: {\n        synths,\n        samplers\n      }\n    }\n  };\n\n  loadSongData = songData => {\n    \n  };\n}\n\nexport default Song;\n","import React, { Component } from \"react\";\nimport \"./PianoRollComponent.css\";\n\nconst notes = [\"B\", \"A#\", \"A\", \"G#\", \"G\", \"F#\", \"F\", \"E\", \"D#\", \"D\", \"C#\", \"C\"];\n\nexport default class PianoRollComponent extends Component {\n  state = {\n    id: this.props.idx,\n    sequence: this.props.notes\n  };\n\n  toNoteScaleArr(noteScaleStr) {\n    return [\n      noteScaleStr.replace(/[0-9]/g, \"\"),\n      noteScaleStr.replace(/[^0-9]/g, \"\")\n    ];\n  }\n\n  createTable() {\n    const initialScale = 3,\n      toScale = 4,\n      rows = 12,\n      cols = 16;\n    let table = [];\n    table.push(\n      <tr>\n        <td className=\"sequencer-controls\" colSpan={cols}>\n          <button className=\"clear-button\" onClick={() => this.clear()}>\n            CLEAR\n          </button>\n        </td>\n      </tr>\n    );\n    for (let scale = toScale; scale > initialScale - 1; scale--) {\n      for (let i = 0; i < rows; i++) {\n        let row = [];\n        let step = true;\n        row.push(\n          <td key={notes[i] + scale} className=\"note-cell\">\n            {notes[i] + scale}\n          </td>\n        );\n\n        for (let j = 0; j < cols; j++) {\n          if (j % 4 === 0) step = !step;\n          let classNameString = step ? \"cell-bar--darken\" : \"cell-bar\";\n          let noteAndScale = this.state.sequence[j];\n          if (noteAndScale) {\n            let noteScaleArr = this.toNoteScaleArr(noteAndScale);\n            if (notes[i] === noteScaleArr[0] && scale === +noteScaleArr[1]) {\n              classNameString += \" cell-active\";\n            }\n          }\n\n          row.push(\n            <td\n              key={notes[i] + scale + j}\n              className={classNameString}\n              note={notes[i]}\n              scale={scale}\n              step={j}\n              onClick={e => this.activateCell(e)}\n            />\n          );\n        }\n        table.push(<tr key={\"row-\" + notes[i] + scale}>{row}</tr>);\n      }\n    }\n    return table;\n  }\n\n  activateCell(e) {\n    const element = e.target;\n    const step = element.getAttribute(\"step\");\n    const note = element.getAttribute(\"note\");\n    const scale = element.getAttribute(\"scale\");\n    const newSequence = [...this.state.sequence];\n\n    //If there is a note for this step, update to store new note,\n    //if note pressed is same as stored update to null,\n    //else store new note in step\n    if (newSequence[step]) {\n      const [stepNote, stepScale] = this.toNoteScaleArr(newSequence[step]);\n      if (note === stepNote && scale === stepScale) {\n        newSequence[step] = null;\n      } else {\n        newSequence[step] = note + scale;\n      }\n    } else {\n      newSequence[step] = note + scale;\n    }\n\n    this.setState(\n      {\n        ...this.state,\n        sequence: newSequence\n      },\n      this.props.updateSynthSequence(newSequence)\n    );\n  }\n\n  clear() {\n    const newSequence = new Array(16).fill(null);\n    this.setState(\n      {\n        ...this.state,\n        sequence: newSequence\n      },\n      this.props.updateSynthSequence(newSequence)\n    );\n  }\n\n  render() {\n    return (\n      <table id={`sequencer-${this.props.idx}`}>\n        <tbody>{this.createTable()}</tbody>\n      </table>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  CircularInput,\n  CircularTrack,\n  CircularProgress,\n  CircularThumb\n} from \"react-circular-input\";\nimport EnvelopeGraph from \"adsr-envelope-graph\";\nimport Switch from \"react-switch\";\nimport PianoRollComponent from \"./PianoRollComponent\";\nimport \"./SynthComponent.css\";\n\nexport default class SynthComponent extends Component {\n  oscTypes = [\"triangle\", \"sine\", \"square\"];\n\n  state = {\n    id: 0,\n    oscillator: null,\n    envelope: {\n      attack: 0.005,\n      decay: 0.1,\n      sustain: 0.3,\n      release: 1\n    },\n    notes: new Array(16).fill(null),\n    active: false\n  };\n\n  componentDidMount() {\n    this.setState({\n      ...this.state,\n      id: this.props.idx,\n      oscillator: this.props.oscillator,\n      envelope: this.props.envelope,\n      active: this.props.active,\n      synth: this.props.instrument,\n      notes: this.props.notes\n    });\n  }\n\n  updateEnvelope(envKey, newValue) {\n    const newEnvelope = { ...this.state }.envelope;\n    newEnvelope[envKey] = newValue;\n    this.setState(\n      {\n        ...this.state,\n        envelope: newEnvelope\n      },\n      () => {\n        this.updateSynth();\n      }\n    );\n  }\n\n  updateOscillator(newValue) {\n    const newOscillator = { ...this.state }.oscillator;\n    newOscillator.type = newValue.currentTarget.value;\n    this.setState(\n      {\n        ...this.state,\n        oscillator: newOscillator\n      },\n      () => {\n        this.updateSynth();\n      }\n    );\n  }\n\n  updateSynth() {\n    this.props.updateSynth(this.state.id, {\n      envelope: this.state.envelope,\n      oscillator: this.state.oscillator\n    });\n  }\n\n  updateSynthSequence(notes) {\n    this.props.updateSynthSequence(this.state.id, notes);\n  }\n\n  activateSynth() {\n    this.props.activateSynth(this.state.id);\n    this.setState({\n      ...this.state,\n      active: !this.state.active\n    });\n  }\n\n  render() {\n    const { attack, decay, sustain, release } = this.state.envelope;\n    const colors = {\n      attack: \"#ff40fc\",\n      decay: \"#fffc36\",\n      sustain: \"#00fbfe\",\n      release: \"#00f92f\"\n    };\n    const envelopeControls = { attack, decay, sustain, release };\n    return (\n      <div className=\"synth\">\n        {/* Oscillator controls*/}\n        <div className=\"oscillator-controls\">\n          <div className=\"activation-button\">\n            {/* Activate/Deactivate */}\n            <Switch onChange={() => this.activateSynth()} checked={this.state.active} />\n          </div>\n          <div className=\"oscillator-selector\">\n            <label htmlFor=\"oscillator-selector\">WAVE TYPE</label>\n            <select\n              id={`osc-select-${this.state.id}`}\n              name=\"oscillator-selector\"\n              onChange={e => this.updateOscillator(e)}\n            >\n              {this.oscTypes.map(oscType => (\n                <option key={oscType} value={oscType}>\n                  {oscType.toUpperCase()}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {/* Envelope controls*/}\n        <div className=\"envelope-controls\">\n          <EnvelopeGraph\n            a={this.state.envelope.attack}\n            d={this.state.envelope.decay}\n            s={this.state.envelope.sustain}\n            r={this.state.envelope.release}\n            style={{\n              border: \"1px solid #fff\",\n              height: \"100px\",\n              width: \"300px\"\n            }}\n          />\n          <div className=\"envelope-knobs\">\n            {Object.entries(envelopeControls).map((value, idx) => {\n              return (\n                <div key={value[0]} className=\"knob-wrapper\">\n                  <CircularInput\n                    radius={35}\n                    value={value[1]}\n                    onChange={e => this.updateEnvelope(value[0], e)}\n                  >\n                    <CircularTrack strokeWidth={3} />\n                    <CircularProgress\n                      stroke={colors[value[0]]}\n                      strokeWidth={7}\n                    />\n                    <CircularThumb fill={colors[value[0]]} r={9} />\n                  </CircularInput>\n                  <label>{value[0].substring(0, 3).toUpperCase()}</label>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Sequencer */}\n        <div className=\"sequencer-wrapper\">\n          <PianoRollComponent\n            idx={this.state.id}\n            notes={this.props.notes}\n            updateSynthSequence={notes => this.updateSynthSequence(notes)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./SequencerComponent.css\";\n\nconst notes = {\n  C3: \"KICK\",\n  \"C#3\": \"SNARE\",\n  D3: \"HIHAT\",\n  \"D#3\": \"O.HAT\",\n  E3: \"CRASH\",\n  F3: \"RIDE\",\n  \"F#3\": \"PERC\",\n  key: function(n) {\n    return Object.keys(this)[n];\n  },\n  value: function(n) {\n    return Object.values(this)[n];\n  }\n};\n\nexport default class SequencerComponent extends Component {\n  state = {\n    sequence: this.props.notes\n  };\n\n  toNoteScaleArr(noteScaleStr) {\n    return [\n      noteScaleStr.replace(/[0-9]/g, \"\"),\n      noteScaleStr.replace(/[^0-9]/g, \"\")\n    ];\n  }\n\n  createTable() {\n    const initialScale = 3,\n      toScale = 3,\n      rows = 7,\n      cols = 16;\n    let table = [];\n    table.push(\n      <tr>\n        <td className=\"sequencer-controls\" colSpan={cols}>\n          <button className=\"clear-button\" onClick={() => this.clear()}>\n            CLEAR\n          </button>\n        </td>\n      </tr>\n    );\n    for (let scale = toScale; scale > initialScale - 1; scale--) {\n      for (let i = 0; i < rows; i++) {\n        let row = [];\n        let step = true;\n        row.push(\n          <td key={notes.key(i)} className=\"note-cell\">\n            {notes.value(i)}\n          </td>\n        );\n\n        for (let j = 0; j < cols; j++) {\n          if (j % 4 === 0) step = !step;\n          let classNameString = step ? \"cell-bar--darken\" : \"cell-bar\";\n          if (\n            (!Array.isArray(this.state.sequence[j]) &&\n              this.state.sequence[j] === notes.key(i)) ||\n            (Array.isArray(this.state.sequence[j]) &&\n              this.state.sequence[j].includes(notes.key(i)))\n          ) {\n            classNameString += \" cell-active\";\n          }\n\n          row.push(\n            <td\n              key={notes.key(i) + j}\n              className={classNameString}\n              note={notes.key(i)}\n              step={j}\n              onClick={e => this.activateCell(e)}\n            />\n          );\n        }\n        table.push(<tr key={\"row-\" + notes.key(i) + scale}>{row}</tr>);\n      }\n    }\n    return table;\n  }\n\n  activateCell(e) {\n    const element = e.target;\n    const step = element.getAttribute(\"step\");\n    const note = element.getAttribute(\"note\");\n    const newSequence = [...this.state.sequence];\n\n    if (Array.isArray(newSequence[step])) {\n      if (newSequence[step].includes(note)) {\n        const idx = newSequence[step].indexOf(note);\n        newSequence[step][idx] = null;\n      } else {\n        newSequence[step].push(note);\n      }\n      newSequence[step] = newSequence[step].filter(el => el != null);\n      if (newSequence[step].length === 1) {\n        newSequence[step] = newSequence[step][0];\n      }\n    } else {\n      if (note === newSequence[step]) {\n        newSequence[step] = null;\n      } else {\n        newSequence[step] = newSequence[step]\n          ? [newSequence[step], note]\n          : note;\n      }\n    }\n\n    this.props.updateSynthSequence(newSequence);\n\n    this.setState({\n      ...this.state,\n      sequence: newSequence\n    });\n  }\n\n  clear() {\n    const newSequence = new Array(16).fill(null);\n    this.setState(\n      {\n        ...this.state,\n        sequence: newSequence\n      },\n      this.props.updateSynthSequence(newSequence)\n    );\n  }\n\n  render() {\n    return (\n      <table id={`sampler-sequencer-${this.props.idx}`}>\n        <tbody>{this.createTable()}</tbody>\n      </table>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Switch from \"react-switch\";\nimport SequencerComponent from \"./SequencerComponent\";\nimport \"./DrumSamplerComponent.css\";\n\nexport default class DrumSamplerComponent extends Component {\n  state = {\n    id: 0,\n    style: \"house\", //default style\n    active: false\n  };\n\n  componentDidMount() {\n    this.setState({\n      ...this.state,\n      id: this.props.idx,\n      active: this.props.active\n    });\n  }\n\n  updateSampler(style) {\n    this.props.updateSampler(this.state.id, style);\n  }\n\n  updateSamplerSequence(notes) {\n    this.props.updateSamplerSequence(this.state.id, notes);\n  }\n\n  activateSampler() {\n    this.props.activateSampler(this.state.id);\n    this.setState({\n      ...this.state,\n      active: !this.state.active\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"sampler\">\n        {/* Activate/Deactivate */}\n        <div className=\"sampler-controls\">\n        <Switch\n          onChange={() => this.activateSampler()}\n          checked={this.state.active}\n        />\n        </div>\n        <div className=\"sequencer-wrapper\">\n          <SequencerComponent\n            idx={this.state.id}\n            notes={this.props.notes}\n            updateSynthSequence={notes => this.updateSamplerSequence(notes)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport './ControlsBar.css';\n\n\nexport default class ControlsBar extends Component {\n  render() {\n    let playButton = <button className=\"play-btn\" onClick={() => this.props.play()}>Play</button>;\n    if (this.props.isPlaying) {\n      playButton = <button className=\"stop-btn\" onClick={() => this.props.stop()}>Stop</button>;\n    }\n    return (\n      <div id=\"controls-bar\">\n        <div>\n          <label>{this.props.tempo}</label>\n          <input\n            type=\"range\"\n            min=\"70\"\n            max=\"160\"\n            value={this.props.tempo}\n            onChange={newTempo => this.props.updateSongTempo(newTempo)}\n          />\n        </div>\n        <div id=\"navigation\">\n          <Link to=\"/\"><button>CREATION MODE</button></Link>\n          <Link to=\"/visualizer\"><button>VISUALIZATION MODE</button></Link>\n        </div>\n        {playButton}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Tone from \"tone\";\nimport * as THREE from \"three\";\nimport \"./VisualizerComponent.css\";\n\nconst OrbitControls = require(\"three-orbit-controls\")(THREE);\n\nexport default class VisualizerComponent extends Component {\n  state = {\n    epilepsyMode: false\n  };\n  constructor() {\n    super();\n    this.analyser = new Tone.Analyser(\"fft\", 16);\n    this.scene = null;\n    this.camera = null;\n    this.renderer = null;\n    this.sphere = null;\n    this.controls = require(\"three-orbit-controls\")(THREE);\n    this.iteration = 0;\n    Tone.Master.connect(this.analyser);\n  }\n\n  componentDidMount() {\n    const V_WIDTH = window.innerWidth,\n      V_HEIGHT = window.innerHeight;\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(15, V_WIDTH / V_HEIGHT, 1, 1000);\n    this.camera.position.set(0, 600, 0);\n    this.scene.add(this.camera);\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(V_WIDTH, V_HEIGHT);\n    document\n      .querySelector(\"#visualizer-wrapper\")\n      .appendChild(this.renderer.domElement);\n\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n\n    const values = this.analyser.getValue();\n    const RADIUS = 50;\n    const SEGMENTS = 16;\n    const RINGS = 16;\n\n    const sphereGeometry = new THREE.SphereGeometry(RADIUS, SEGMENTS, RINGS);\n\n    const sphereMaterial = new THREE.MeshBasicMaterial({\n      color: 0xffffff,\n      wireframe: true\n    });\n\n    const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\n\n    // Move the Sphere back in Z so we\n    // can see it.\n    sphere.position.x = 0;\n    sphere.position.z = 0;\n\n    // Finally, add the sphere to the scene.\n    this.scene.add(sphere);\n    this.sphere = sphere;\n    this.renderer.render(this.scene, this.camera);\n    this.draw();\n  }\n\n  toggleEpilepsyMode = () => {\n    console.log(!this.state.epilepsyMode);\n    this.setState({\n      ...this.state,\n      epilepsyMode: !this.state.epilepsyMode\n    });\n  };\n\n  draw = () => {\n    const bassValue = Math.abs(this.analyser.getValue()[0]);\n    const highValue = Math.abs(this.analyser.getValue()[15]);\n    const threshold = 8;\n    if (this.state.epilepsyMode) {\n      if (bassValue > 20 && this.iteration % threshold === 0) {\n        this.sphere.scale.set(\n          bassValue / 100,\n          bassValue / 100,\n          bassValue / 100\n        );\n      } else {\n        this.sphere.scale.set(16, 16, 16);\n      }\n    } else {\n      if (bassValue > 20) {\n        this.sphere.scale.set(\n          bassValue / 100,\n          bassValue / 100,\n          bassValue / 100\n        );\n      } else {\n        this.sphere.scale.set(1, 1, 1);\n      }\n    }\n    this.sphere.rotation.y += 0.5;\n    if (this.renderer) this.renderer.render(this.scene, this.camera);\n    this.iteration > threshold ? (this.iteration = 1) : this.iteration++;\n    requestAnimationFrame(this.draw);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div id=\"visualizer-wrapper\">\n          <button\n            id=\"epilepsy-mode-button\"\n            className={this.state.epilepsyMode ? \"btn-on\" : \"btn-off\"}\n            onClick={() => this.toggleEpilepsyMode()}\n          >\n            EPILEPSY MODE: {this.state.epilepsyMode ? 'ON' : 'OFF'}\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Song from \"./classes/Song.class.js\";\nimport SynthComponent from \"./components/SynthComponent\";\nimport DrumSamplerComponent from \"./components/DrumSamplerComponent\";\nimport ControlsBar from \"./components/ControlsBar\";\nimport VisualizerComponent from \"./components/VisualizerComponent\";\n\nexport default class App extends React.Component {\n  state = {\n    song: new Song(),\n    tempo: 130,\n    isPlaying: false\n  };\n\n  //SONG\n  updateSongtempo(newTempo) {\n    const tempo = newTempo.target.value;\n    this.state.song.updateTempo(tempo);\n    this.setState({\n      ...this.state,\n      tempo: tempo\n    });\n  }\n\n  play() {\n    this.state.song.play();\n    this.setState({\n      ...this.state,\n      isPlaying: true\n    });\n  }\n\n  stop() {\n    this.state.song.stop();\n    this.setState({\n      ...this.state,\n      isPlaying: false\n    });\n  }\n\n  exportSongData() {\n    console.log(JSON.stringify(this.state.song.exportSongData()));\n  }\n\n  loadSongData() {\n    this.state.song.stop();\n    //Simulate GET call from backend\n    const songData = JSON.parse(\n      `{\n        \"tempo\":130,\n        \"instruments\":{\n          \"synths\":[\n            {\n              \"notes\":[\n                \"B4\",null,null,null,\"A4\",null,null,null,\"B4\",null,null,null,\"A4\",null,null,null\n              ],\n              \"oscillator\":{\"type\":\"sine\"},\n              \"envelope\":{\n                \"attack\":0.2690077039239749,\n                \"decay\":0.1,\n                \"sustain\":0.5,\n                \"release\":1\n              }\n            }\n          ],\n          \"samplers\":[\n            {\n              \"notes\":[\"C3\",null,\"D3\",null,\"C#3\",null,\"D3\",null,\"C3\",null,\"D3\",null,\"C#3\",null,\"D3\",null],\n              \"style\":\"house\"\n            }\n          ]\n        }\n      }`\n    );\n\n    const newSong = new Song();\n    newSong.updateTempo(songData.tempo);\n\n    const synthsData = songData.instruments.synths;\n    synthsData.forEach((synthData, idx) => {\n      newSong.addBasicSynth(idx, synthData.oscillator.type);\n      const { oscillator, envelope } = { ...synthData };\n      newSong.updateSynth(idx, { oscillator, envelope });\n      newSong.updateSynthSequence(idx, synthData.notes);\n    });\n\n    const samplersData = songData.instruments.samplers;\n    samplersData.forEach((samplerData, idx) => {\n      newSong.addSampler(idx, samplerData.style);\n      newSong.updateSamplerSequence(idx, samplerData.notes);\n    });\n\n    this.setState({\n      ...this.state,\n      song: newSong\n    });\n  }\n\n  //SYNTHS\n  addNewBasicSynth() {\n    const newSong = { ...this.state.song };\n    newSong.instruments = this.state.song.addBasicSynth(\n      this.state.song.instruments.length\n    );\n    this.setState({\n      ...this.state,\n      song: newSong\n    });\n  }\n\n  updateSynth(idx, props) {\n    const newSong = { ...this.state.song };\n    newSong.instruments = this.state.song.updateSynth(idx, props);\n    this.setState({\n      ...this.state,\n      song: newSong\n    });\n  }\n\n  updateSynthSequence(idx, notes) {\n    this.state.song.updateSynthSequence(idx, notes);\n  }\n\n  activateSynth(idx) {\n    this.state.song.activateSynth(idx);\n  }\n\n  //SAMPLER\n  addNewSampler() {\n    const newSong = { ...this.state.song };\n    newSong.instruments = this.state.song.addSampler(\n      this.state.song.instruments.length\n    );\n    this.setState({\n      ...this.state,\n      song: newSong\n    });\n  }\n\n  updateSampler(idx, style) {\n    const newSong = { ...this.state.song };\n    newSong.instruments = this.state.song.updateSampler(idx, style);\n    this.setState({\n      ...this.state,\n      song: newSong\n    });\n  }\n\n  updateSamplerSequence(idx, notes) {\n    this.state.song.updateSamplerSequence(idx, notes);\n  }\n\n  activateSampler(idx) {\n    this.state.song.activateSampler(idx);\n  }\n\n  renderSynthsSection() {\n    const synths = this.state.song.getSynths();\n    return synths.map((synth, idx) => (\n      <SynthComponent\n        key={idx}\n        idx={idx}\n        {...synth.instrument}\n        notes={synth.notes}\n        active={synth.active}\n        updateSynth={(idx, props) => this.updateSynth(idx, props)}\n        updateSynthSequence={(idx, notes) =>\n          this.updateSynthSequence(idx, notes)\n        }\n        activateSynth={() => this.activateSynth(idx)}\n      />\n    ));\n  }\n\n  renderSamplerSection() {\n    const samplers = this.state.song.getSamplers();\n    return samplers.map((sampler, idx) => (\n      <DrumSamplerComponent\n        key={idx}\n        idx={idx}\n        {...sampler}\n        notes={sampler.notes}\n        active={sampler.active}\n        updateSampler={(idx, style) => this.updateSampler(idx, style)}\n        updateSamplerSequence={(idx, notes) =>\n          this.updateSamplerSequence(idx, notes)\n        }\n        activateSampler={() => this.activateSampler(idx)}\n      />\n    ));\n  }\n\n  renderCreationSection() {\n    return (\n      <div id=\"create-app\">\n        <div id=\"instruments-rack\">\n          <div id=\"add-wrapper\">\n            <button onClick={() => this.addNewBasicSynth()}>Add Synth</button>\n            <button onClick={() => this.addNewSampler()}>Add Sampler</button>\n          </div>\n          {this.renderSynthsSection()}\n          {this.renderSamplerSection()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ControlsBar\n          isPlaying={this.state.isPlaying}\n          tempo={this.state.tempo}\n          play={() => this.play()}\n          stop={() => this.stop()}\n          updateSongTempo={newTempo => this.updateSongtempo(newTempo)}\n          addNewBasicSynth={() => this.addNewBasicSynth()}\n          addNewSampler={() => this.addNewSampler()}\n        />\n        <Switch>\n          <Route path=\"/visualizer\" component={VisualizerComponent} />\n          <Route\n            path=\"/\"\n            render={() => {\n              return this.renderCreationSection();\n            }}\n          />\n        </Switch>\n        <button onClick={() => this.loadSongData()}>LOAD</button>\n        <button onClick={() => this.exportSongData()}>SAVE</button>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}