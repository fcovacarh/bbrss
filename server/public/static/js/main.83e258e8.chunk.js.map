{"version":3,"sources":["BasicSynth.class.js","Song.class.js","components/PianoRollComponent.jsx","components/SynthComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["Instrument","id","oscType","_this","this","Object","classCallCheck","updateInstrument","props","synth","oscillator","type","envelope","attack","decay","sustain","release","activateInstrument","active","sequence","stop","start","updateSequence","notes","length","Tone","Sequence","time","note","triggerAttackRelease","Synth","toMaster","Song","addBasicSynth","arguments","undefined","instruments","push","BasicSynth","getSynths","getSynth","idx","updateSynth","updateSynthSequence","console","log","activateSynth","play","Transport","tempo","init","bpm","value","PianoRollComponent","table","scale","initialScale","i","row","step","react_default","a","createElement","key","className","j","classNameString","onClick","e","activateCell","element","target","getAttribute","otherCell","document","querySelector","concat","classList","remove","toggle","reReadSequence","cells","querySelectorAll","Array","fill","forEach","cell","isArray","createTable","Component","SynthComponent","oscTypes","state","setState","objectSpread","envKey","newValue","_this2","newEnvelope","_this3","newOscillator","currentTarget","_this4","_this$state$envelope","colors","envelopeControls","react_switch_default","onChange","checked","htmlFor","name","updateOscillator","map","toUpperCase","lib_default","d","s","r","style","border","height","width","entries","dist","radius","updateEnvelope","strokeWidth","stroke","substring","PianoRollComponent_PianoRollComponent","App","song","newSong","synths","addNewBasicSynth","SynthComponent_SynthComponent","assign","React","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83e258e8.chunk.js","sourcesContent":["import Tone from \"tone\";\n\nexport default class Instrument {\n  constructor(id, oscType) {\n    this.id = id;\n    this.synth = new Tone.Synth(oscType).toMaster();\n    this.sequence = null;\n    this.active = false;\n  }\n\n  updateInstrument = props => {\n    this.synth.oscillator.type = props.oscillator.type;\n    this.synth.envelope.attack = props.envelope.attack;\n    this.synth.envelope.decay = props.envelope.decay;\n    this.synth.envelope.sustain = props.envelope.sustain;\n    this.synth.envelope.release = props.envelope.release;\n    return this.synth;\n  };\n\n  activateInstrument = () => {\n    if (this.active) {\n      if (this.sequence) {\n        this.sequence.stop();\n      }\n    } else {\n      if (this.sequence) {\n        this.sequence.start();\n      }\n    }\n    this.active = !this.active;\n  };\n\n  updateSequence = notes => {\n    if (notes.length !== 0) {\n      if(this.active && this.sequence){\n        this.sequence.stop('1m');\n      }\n      this.sequence = new Tone.Sequence(\n        (time, note) => {\n          this.synth.triggerAttackRelease(note, \"10hz\", time);\n        },\n        notes,\n        \"16n\"\n      );\n      if(this.active) {\n        this.sequence.start('1m');\n      }\n    }\n  };\n}\n","import Tone from \"tone\";\nimport BasicSynth from './BasicSynth.class.js';\n\nclass Song {\n  constructor() {\n    this.tempo = 128;\n    this.instruments = [];\n    this.init();\n  }\n\n  init(){\n    Tone.Transport.bpm.value = this.tempo;\n  }\n\n  addBasicSynth = (id, type = 'triangle') => {\n    this.instruments.push(new BasicSynth(id, type));\n    return this.getSynths();\n  };\n\n  getSynths = () => {\n    return this.instruments;\n  };\n\n  getSynth = idx => {\n    return this.instruments[idx];\n  };\n\n  updateSynth = (idx, props) => {\n    return this.instruments[idx].updateInstrument(props)\n  };\n\n  updateSynthSequence = (idx, notes) => {\n    console.log(idx);\n    this.instruments[idx].updateSequence(notes);\n  }\n\n  activateSynth = (idx) => {\n    this.instruments[idx].activateInstrument();\n  };\n\n  play = () => {\n    Tone.Transport.start();\n  };\n\n  stop = () => {\n    Tone.Transport.stop();\n  };\n}\n\nexport default Song;\n","import React, { Component } from \"react\";\nimport \"./PianoRollComponent.css\";\n\nconst notes = [\"B\", \"A#\", \"A\", \"G#\", \"G\", \"F#\", \"F\", \"E\", \"D#\", \"D\", \"C#\", \"C\"];\n\nexport default class PianoRollComponent extends Component {\n  createTable() {\n    const initialScale = 3,\n      toScale = 4,\n      rows = 12,\n      cols = 16;\n    let table = [];\n    for (let scale = toScale; scale > initialScale - 1; scale--) {\n      for (let i = 0; i < rows; i++) {\n        let row = [];\n        let step = true;\n        row.push(\n          <td key={notes[i] + scale} className=\"note-cell\">\n            {notes[i] + scale}\n          </td>\n        );\n\n        for (let j = 0; j < cols; j++) {\n          if (j % 4 === 0) step = !step;\n          let classNameString = step ? \"cell-bar--darken\" : 'cell-bar';\n          row.push(\n            <td\n              key={notes[i] + scale + j}\n              className={classNameString}\n              note={notes[i]}\n              scale={scale}\n              step={j}\n              onClick={e => this.activateCell(e)}\n            />\n          );\n        }\n        table.push(<tr key={\"row-\" + notes[i] + scale}>{row}</tr>);\n      }\n    }\n    return table;\n  }\n\n  activateCell(e) {\n    const element = e.target;\n    const step = element.getAttribute('step');\n    const otherCell = document.querySelector(`[step=\"${step}\"]`);\n    if(otherCell.getAttribute('step') !== step) { console.log('wololo'); otherCell.classList.remove('.cell-active') }\n    element.classList.toggle(\"cell-active\");\n    this.reReadSequence();\n  }\n\n  reReadSequence() {\n    const cells = document.querySelectorAll(\".cell-active\");\n    let sequence = new Array(16).fill(null);\n\n    cells.forEach(cell => {\n      let step = cell.getAttribute(\"step\");\n      let note = cell.getAttribute(\"note\");\n      let scale = cell.getAttribute(\"scale\");\n      if (typeof sequence[step] === \"string\" && sequence[step].length > 0) {\n        sequence[step] = [sequence[step], [note + scale]];\n      } else if (Array.isArray(sequence[step])) {\n        sequence[step].push([note + scale]);\n      } else {\n        sequence[step] = [note + scale];\n      }\n    });\n    this.props.updateSynthSequence(sequence);\n  }\n\n  render() {\n    return (\n      <table id={`sequencer-${this.props.idx}`}>\n        <tbody>{this.createTable()}</tbody>\n      </table>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  CircularInput,\n  CircularTrack,\n  CircularProgress,\n  CircularThumb\n} from \"react-circular-input\";\nimport EnvelopeGraph from \"adsr-envelope-graph\";\nimport Switch from \"react-switch\";\nimport PianoRollComponent from \"./PianoRollComponent\";\nimport \"./SynthComponent.css\";\n\nexport default class SynthComponent extends Component {\n  oscTypes = [\"triangle\", \"sine\", \"square\"];\n\n  state = {\n    id: 0,\n    oscillator: null,\n    envelope: {\n      attack: 0.005,\n      decay: 0.1,\n      sustain: 0.3,\n      release: 1\n    }\n  };\n\n  componentDidMount() {\n    this.setState({\n      ...this.state,\n      id: this.props.idx,\n      oscillator: this.props.oscillator,\n      envelope: this.props.envelope,\n      active: false\n    });\n  }\n\n  updateEnvelope(envKey, newValue) {\n    const newEnvelope = { ...this.state }.envelope;\n    newEnvelope[envKey] = newValue;\n    this.setState(\n      {\n        ...this.state,\n        envelope: newEnvelope\n      },\n      () => {\n        this.updateSynth();\n      }\n    );\n  }\n\n  updateOscillator(newValue) {\n    const newOscillator = { ...this.state }.oscillator;\n    newOscillator.type = newValue.currentTarget.value;\n    this.setState(\n      {\n        ...this.state,\n        oscillator: newOscillator\n      },\n      () => {\n        this.updateSynth();\n      }\n    );\n  }\n\n  updateSynth() {\n    this.props.updateSynth(this.state.id, {\n      envelope: this.state.envelope,\n      oscillator: this.state.oscillator\n    });\n  }\n\n  updateSynthSequence(notes) {\n    this.props.updateSynthSequence(this.state.id, notes);\n  }\n\n  activateSynth() {\n    this.props.activateSynth(this.state.id);\n    this.setState({\n      ...this.state,\n      active: !this.state.active\n    });\n  }\n\n  render() {\n    const { attack, decay, sustain, release } = this.state.envelope;\n    const colors = {\n      attack: \"#ff40fc\",\n      decay: \"#fffc36\",\n      sustain: \"#00fbfe\",\n      release: \"#00f92f\"\n    };\n    const envelopeControls = { attack, decay, sustain, release };\n    return (\n      <div className=\"synth\">\n        {/* Oscillator controls*/}\n        <div className=\"oscillator-controls\">\n          <div className=\"activation-button\">\n            {/* Activate/Deactivate */}\n            <Switch onChange={() => this.activateSynth()} checked={this.state.active} />\n          </div>\n          <div className=\"oscillator-selector\">\n            <label htmlFor=\"oscillator-selector\">WAVE TYPE</label>\n            <select\n              id={`osc-select-${this.state.id}`}\n              name=\"oscillator-selector\"\n              onChange={e => this.updateOscillator(e)}\n            >\n              {this.oscTypes.map(oscType => (\n                <option key={oscType} value={oscType}>\n                  {oscType.toUpperCase()}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {/* Envelope controls*/}\n        <div className=\"envelope-controls\">\n          <EnvelopeGraph\n            a={this.state.envelope.attack}\n            d={this.state.envelope.decay}\n            s={this.state.envelope.sustain}\n            r={this.state.envelope.release}\n            style={{\n              border: \"1px solid #fff\",\n              height: \"100px\",\n              width: \"300px\"\n            }}\n          />\n          <div className=\"envelope-knobs\">\n            {Object.entries(envelopeControls).map((value, idx) => {\n              return (\n                <div className=\"knob-wrapper\">\n                  <CircularInput\n                    key={value[0]}\n                    radius={35}\n                    value={value[1]}\n                    onChange={e => this.updateEnvelope(value[0], e)}\n                  >\n                    <CircularTrack strokeWidth={3} />\n                    <CircularProgress\n                      stroke={colors[value[0]]}\n                      strokeWidth={7}\n                    />\n                    <CircularThumb fill={colors[value[0]]} r={9} />\n                  </CircularInput>\n                  <label>{value[0].substring(0, 3).toUpperCase()}</label>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Sequencer */}\n        <div className=\"sequencer-wrapper\">\n          <PianoRollComponent\n            idx={this.state.id}\n            updateSynthSequence={notes => this.updateSynthSequence(notes)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Song from \"./Song.class.js\";\nimport SynthComponent from \"./components/SynthComponent\";\n\nexport default class App extends React.Component {\n  state = {\n    song: new Song()\n  };\n\n  addNewBasicSynth() {\n    const newSong = { ...this.state.song};\n    newSong.instruments = this.state.song.addBasicSynth(this.state.song.instruments.length);\n    this.setState({\n      ...this.state,\n      song: newSong\n    });\n  }\n\n  updateSynth(idx, props) {\n    const newSong = { ...this.state.song };\n    newSong.instruments = this.state.song.updateSynth(idx, props);\n    this.setState({\n      ...this.state,\n      song: newSong\n    });\n  }\n\n  updateSynthSequence(idx, notes) {\n    this.state.song.updateSynthSequence(idx, notes);\n  }\n\n  activateSynth(idx) {\n    this.state.song.activateSynth(idx);\n  }\n\n  play() {\n    this.state.song.play();\n  }\n\n  stop() {\n    this.state.song.stop();\n  }\n\n  render() {\n    const synths = this.state.song.getSynths();\n    return (\n      <div className=\"App\">\n        <button onClick={() => this.addNewBasicSynth()}>Add Basic Synth</button>\n        <button onClick={() => this.play()}>Play</button>\n        <button onClick={() => this.stop()}>Stop</button>\n        <div className=\"synth-rack\">\n          {synths.map((synth, idx) => (\n            <SynthComponent\n              key={idx}\n              idx={idx}\n              {...synth.synth}\n              updateSynth={(idx, props) => this.updateSynth(idx, props)}\n              updateSynthSequence={(idx, notes) => this.updateSynthSequence(idx, notes)}\n              activateSynth={() => this.activateSynth(idx)}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}