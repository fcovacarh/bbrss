{"ast":null,"code":"var _jsxFileName = \"/home/fvrh/Documentos/week8/bbrss/src/components/PianoRollComponent.jsx\";\nimport React, { Component } from \"react\";\nimport \"./PianoRollComponent.css\";\nconst notes = [\"B\", \"A#\", \"A\", \"G#\", \"G\", \"F#\", \"F\", \"E\", \"D#\", \"D\", \"C#\", \"C\"];\nexport default class PianoRollComponent extends Component {\n  createTable() {\n    const initialScale = 1,\n          toScale = 6,\n          rows = 12,\n          cols = 16;\n    let table = [];\n\n    for (let scale = toScale; scale > initialScale - 1; scale--) {\n      for (let i = 0; i < rows; i++) {\n        let row = [];\n        let step = true; // let row = document.createElement(\"tr\");\n        // let noteRow = document.createElement(\"th\");\n        // noteRow.className = \"note-cell\";\n        // noteRow.innerHTML = notes[i] + scale;\n        // row.appendChild(noteRow);\n\n        row.push(React.createElement(\"td\", {\n          key: notes[i] + scale,\n          className: \"note-cell\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, notes[i] + scale));\n\n        for (let j = 0; j < cols; j++) {\n          //   let col = document.createElement(\"td\");\n          //   if (j % 4 === 0) step = !step;\n          //   if (step) col.className = \"cell-bar\";\n          //   col.setAttribute(\"note\", notes[i]);\n          //   col.setAttribute(\"scale\", scale);\n          //   col.setAttribute(\"step\", j);\n          //   col.setAttribute(\"onclick\", this.activateCell);\n          //   row.appendChild(col);\n          row.push(React.createElement(\"td\", {\n            key: notes[i] + scale + j,\n            className: step && \"cell-bar\",\n            note: notes[i],\n            scale: scale,\n            step: j,\n            onClick: e => this.activateCell(e),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }));\n        }\n\n        table.push(React.createElement(\"tr\", {\n          key: 'row-' + notes[i] + scale,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, row));\n      }\n    }\n\n    return table;\n  }\n\n  activateCell(e) {\n    const element = e.target;\n    element.classList.toggle(\"cell-active\");\n    this.reReadSequence();\n  }\n\n  reReadSequence() {\n    const cells = document.querySelectorAll(\".cell-active\");\n    let sequence = new Array(16).fill(null);\n    cells.forEach(cell => {\n      let step = cell.getAttribute(\"step\");\n      let note = cell.getAttribute(\"note\");\n      let scale = cell.getAttribute(\"scale\");\n\n      if (typeof sequence[step] === \"string\" && sequence[step].length > 0) {\n        sequence[step] = [sequence[step], note + scale];\n      } else if (Array.isArray(sequence[step])) {\n        sequence[step].push(note + scale);\n      } else {\n        sequence[step] = note + scale;\n      }\n    });\n    console.log(sequence);\n    return sequence;\n  }\n\n  render() {\n    return React.createElement(\"table\", {\n      id: \"sequencer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.createTable());\n  }\n\n}","map":{"version":3,"sources":["/home/fvrh/Documentos/week8/bbrss/src/components/PianoRollComponent.jsx"],"names":["React","Component","notes","PianoRollComponent","createTable","initialScale","toScale","rows","cols","table","scale","i","row","step","push","j","e","activateCell","element","target","classList","toggle","reReadSequence","cells","document","querySelectorAll","sequence","Array","fill","forEach","cell","getAttribute","note","length","isArray","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./PianoRollComponent.css\";\n\nconst notes = [\"B\", \"A#\", \"A\", \"G#\", \"G\", \"F#\", \"F\", \"E\", \"D#\", \"D\", \"C#\", \"C\"];\n\nexport default class PianoRollComponent extends Component {\n  createTable() {\n    const initialScale = 1,\n      toScale = 6,\n      rows = 12,\n      cols = 16;\n    let table = [];\n    for (let scale = toScale; scale > initialScale - 1; scale--) {\n      for (let i = 0; i < rows; i++) {\n        let row = [];\n        let step = true;\n        // let row = document.createElement(\"tr\");\n        // let noteRow = document.createElement(\"th\");\n        // noteRow.className = \"note-cell\";\n        // noteRow.innerHTML = notes[i] + scale;\n        // row.appendChild(noteRow);\n        row.push(\n          <td key={notes[i] + scale} className=\"note-cell\">\n            {notes[i] + scale}\n          </td>\n        );\n\n        for (let j = 0; j < cols; j++) {\n          //   let col = document.createElement(\"td\");\n          //   if (j % 4 === 0) step = !step;\n          //   if (step) col.className = \"cell-bar\";\n          //   col.setAttribute(\"note\", notes[i]);\n          //   col.setAttribute(\"scale\", scale);\n          //   col.setAttribute(\"step\", j);\n          //   col.setAttribute(\"onclick\", this.activateCell);\n          //   row.appendChild(col);\n          row.push(\n            <td\n              key={notes[i] + scale + j}\n              className={step && \"cell-bar\"}\n              note={notes[i]}\n              scale={scale}\n              step={j}\n              onClick={e => this.activateCell(e)}\n            />\n          );\n        }\n        table.push(<tr key={'row-'+notes[i]+scale}>{row}</tr>);\n      }\n    }\n    return table;\n  }\n\n  activateCell(e) {\n    const element = e.target;\n    element.classList.toggle(\"cell-active\");\n    this.reReadSequence();\n  }\n\n  reReadSequence() {\n    const cells = document.querySelectorAll(\".cell-active\");\n    let sequence = new Array(16).fill(null);\n\n    cells.forEach(cell => {\n      let step = cell.getAttribute(\"step\");\n      let note = cell.getAttribute(\"note\");\n      let scale = cell.getAttribute(\"scale\");\n      if (typeof sequence[step] === \"string\" && sequence[step].length > 0) {\n        sequence[step] = [sequence[step], note + scale];\n      } else if (Array.isArray(sequence[step])) {\n        sequence[step].push(note + scale);\n      } else {\n        sequence[step] = note + scale;\n      }\n    });\n    console.log(sequence);\n    return sequence;\n  }\n\n  render() {\n    return <table id=\"sequencer\">{this.createTable()}</table>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}