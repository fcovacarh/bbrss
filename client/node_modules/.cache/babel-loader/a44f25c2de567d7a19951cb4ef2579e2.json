{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar CircularInputContext_1 = require(\"./CircularInputContext\");\n\nvar CircularTrack_1 = require(\"./CircularTrack\");\n\nvar CircularProgress_1 = require(\"./CircularProgress\");\n\nvar CircularThumb_1 = require(\"./CircularThumb\");\n\nfunction CircularInput(_a) {\n  var _b = _a.value,\n      value = _b === void 0 ? 0.25 : _b,\n      _c = _a.radius,\n      radius = _c === void 0 ? 100 : _c,\n      onChange = _a.onChange,\n      children = _a.children,\n      props = __rest(_a, [\"value\", \"radius\", \"onChange\", \"children\"]);\n\n  var containerRef = react_1.useRef(null);\n  var size = radius * 2;\n  var center = {\n    x: radius,\n    y: radius\n  }; // Accessibility\n\n  var _d = react_1.useState(false),\n      isFocused = _d[0],\n      setFocused = _d[1];\n\n  var isReadonly = !onChange;\n  var handleFocus = react_1.useCallback(function () {\n    setFocused(true);\n  }, []);\n  var handleBlur = react_1.useCallback(function () {\n    setFocused(false);\n  }, []);\n  var handleKeyDown = react_1.useCallback(function (e) {\n    if (!isFocused) return;\n    var keyCode = e.keyCode; // arrow up, arrow right, page up, space\n\n    var isIncrement = keyCode === 38 || keyCode === 39 || keyCode === 33 || keyCode === 32; // arrow down, arrow left, page down\n\n    var isDecrement = keyCode === 40 || keyCode === 37 || keyCode === 34;\n\n    if (isIncrement) {\n      onChange(Math.min(1, value + 0.1));\n    }\n\n    if (isDecrement) {\n      onChange(Math.max(0, value - 0.1));\n    }\n\n    if (isIncrement || isDecrement) {\n      e.preventDefault();\n    }\n  }, [isFocused, onChange, value]);\n  var accessibilityProps = {\n    tabIndex: 0,\n    role: 'slider',\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onKeyDown: handleKeyDown\n  }; // Geometry utilities\n\n  var getPointFromValue = react_1.useCallback(function (v) {\n    return utils_1.polarToCartesian({\n      center: center,\n      angle: utils_1.valueToAngle(v || value),\n      radius: radius\n    });\n  }, [value, center, radius]);\n  var getValueFromPointerEvent = react_1.useCallback(function (e) {\n    return utils_1.calculateNearestValueToPoint({\n      point: utils_1.absPos(e),\n      container: utils_1.getElementPosition(containerRef.current),\n      value: value,\n      center: center,\n      radius: radius\n    });\n  }, [containerRef.current, value, center, radius]); // Context\n\n  var context = react_1.useMemo(function () {\n    return {\n      value: value,\n      radius: radius,\n      center: center,\n      isFocused: isFocused,\n      setFocused: setFocused,\n      onChange: onChange,\n      getPointFromValue: getPointFromValue,\n      getValueFromPointerEvent: getValueFromPointerEvent\n    };\n  }, [value, radius, center, onChange, isFocused, setFocused]);\n  var handleClick = react_1.useCallback(function (e) {\n    if (isReadonly) return;\n    var nearestValue = getValueFromPointerEvent(e);\n    onChange(nearestValue);\n  }, [onChange, getValueFromPointerEvent, isReadonly]);\n\n  var style = __assign({\n    overflow: 'visible',\n    outline: 'none'\n  }, props.style || {}, {\n    touchAction: 'manipulation',\n    WebkitTapHighlightColor: 'rgba(0,0,0,0)'\n  });\n\n  return react_1.default.createElement(CircularInputContext_1.CircularInputProvider, {\n    value: context\n  }, react_1.default.createElement(\"svg\", __assign({}, props, {\n    ref: containerRef,\n    width: size,\n    height: size,\n    viewBox: \"0 0 \" + size + \" \" + size,\n    style: style,\n    onClick: handleClick\n  }, !isReadonly ? accessibilityProps : {}), children ? typeof children === 'function' ? children(context) : children : react_1.default.createElement(react_1.default.Fragment, null, react_1.default.createElement(CircularTrack_1.CircularTrack, null), react_1.default.createElement(CircularProgress_1.CircularProgress, null), react_1.default.createElement(CircularThumb_1.CircularThumb, null))));\n}\n\nexports.CircularInput = CircularInput;","map":null,"metadata":{},"sourceType":"script"}