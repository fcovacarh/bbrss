{"ast":null,"code":"var _jsxFileName = \"/home/fvrh/Documentos/week8/bbrss/src/components/PianoRollComponent.jsx\";\nimport React, { Component } from \"react\";\nimport \"./PianoRollComponent.css\";\nconst notes = [\"B\", \"A#\", \"A\", \"G#\", \"G\", \"F#\", \"F\", \"E\", \"D#\", \"D\", \"C#\", \"C\"];\nexport default class PianoRollComponent extends Component {\n  createTable() {\n    const initialScale = 1,\n          toScale = 6,\n          rows = 12,\n          cols = 16;\n    let table = [];\n\n    for (let scale = toScale; scale > initialScale - 1; scale--) {\n      for (let i = 0; i < rows; i++) {\n        let step = true;\n        let row = document.createElement(\"tr\");\n        let noteRow = document.createElement(\"th\");\n        noteRow.className = \"note-cell\";\n        noteRow.innerHTML = notes[i] + scale;\n        row.appendChild(noteRow);\n\n        for (let j = 0; j < cols; j++) {\n          let col = document.createElement(\"td\");\n          if (j % 4 === 0) step = !step;\n          if (step) col.className = \"cell-bar\";\n          col.setAttribute(\"note\", notes[i]);\n          col.setAttribute(\"scale\", scale);\n          col.setAttribute(\"step\", j);\n          col.setAttribute(\"onclick\", this.activateCell);\n          row.appendChild(col);\n        }\n\n        document.querySelector(\"#sequencer\").appendChild(row);\n      }\n\n      table.push(row);\n    }\n\n    return table;\n  }\n\n  activateCell(e) {\n    const element = e.target;\n    element.classList.toggle(\"cell-active\");\n    console.log();\n    this.reReadSequence();\n  }\n\n  reReadSequence() {\n    const cells = document.querySelectorAll(\".cell-active\");\n    let sequence = new Array(16).fill(\"\");\n    cells.forEach(cell => {\n      let step = cell.getAttribute(\"step\");\n      let note = cell.getAttribute(\"note\");\n      let scale = cell.getAttribute(\"scale\");\n\n      if (typeof sequence[step] === \"string\" && sequence[step].length > 0) {\n        sequence[step] = [sequence[step], note + scale];\n      } else if (Array.isArray(sequence[step])) {\n        sequence[step].push(note + scale);\n      } else {\n        sequence[step] = note + scale;\n      }\n    });\n    return sequence;\n  }\n\n  render() {\n    return React.createElement(\"table\", {\n      id: \"sequencer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.createTable());\n  }\n\n}","map":{"version":3,"sources":["/home/fvrh/Documentos/week8/bbrss/src/components/PianoRollComponent.jsx"],"names":["React","Component","notes","PianoRollComponent","createTable","initialScale","toScale","rows","cols","table","scale","i","step","row","document","createElement","noteRow","className","innerHTML","appendChild","j","col","setAttribute","activateCell","querySelector","push","e","element","target","classList","toggle","console","log","reReadSequence","cells","querySelectorAll","sequence","Array","fill","forEach","cell","getAttribute","note","length","isArray","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./PianoRollComponent.css\";\n\nconst notes = [\"B\", \"A#\", \"A\", \"G#\", \"G\", \"F#\", \"F\", \"E\", \"D#\", \"D\", \"C#\", \"C\"];\n\nexport default class PianoRollComponent extends Component {\n  createTable() {\n    const initialScale = 1,\n      toScale = 6,\n      rows = 12,\n      cols = 16;\n    let table = [];\n    for (let scale = toScale; scale > initialScale - 1; scale--) {\n      for (let i = 0; i < rows; i++) {\n        let step = true;\n        let row = document.createElement(\"tr\");\n        let noteRow = document.createElement(\"th\");\n        noteRow.className = \"note-cell\";\n        noteRow.innerHTML = notes[i] + scale;\n        row.appendChild(noteRow);\n\n        for (let j = 0; j < cols; j++) {\n          let col = document.createElement(\"td\");\n          if (j % 4 === 0) step = !step;\n          if (step) col.className = \"cell-bar\";\n          col.setAttribute(\"note\", notes[i]);\n          col.setAttribute(\"scale\", scale);\n          col.setAttribute(\"step\", j);\n          col.setAttribute(\"onclick\", this.activateCell);\n          row.appendChild(col);\n        }\n        document.querySelector(\"#sequencer\").appendChild(row);\n      }\n      table.push(row);\n    }\n    return table;\n  }\n\n  activateCell(e) {\n    const element = e.target;\n    element.classList.toggle(\"cell-active\");\n    console.log()\n    this.reReadSequence();\n  }\n\n  reReadSequence() {\n    const cells = document.querySelectorAll(\".cell-active\");\n    let sequence = new Array(16).fill(\"\");\n\n    cells.forEach(cell => {\n      let step = cell.getAttribute(\"step\");\n      let note = cell.getAttribute(\"note\");\n      let scale = cell.getAttribute(\"scale\");\n      if (typeof sequence[step] === \"string\" && sequence[step].length > 0) {\n        sequence[step] = [sequence[step], note + scale];\n      } else if (Array.isArray(sequence[step])) {\n        sequence[step].push(note + scale);\n      } else {\n        sequence[step] = note + scale;\n      }\n    });\n    return sequence;\n  }\n\n  render() {\n    return <table id=\"sequencer\"> \n    { \n        this.createTable()\n    }\n    </table>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}