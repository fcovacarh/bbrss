{"ast":null,"code":"import _objectSpread from \"/home/fvrh/Documentos/week8/bbrss/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/fvrh/Documentos/week8/bbrss/src/components/SynthComponent.jsx\";\nimport React, { Component } from \"react\";\nimport { CircularInput, CircularTrack, CircularProgress, CircularThumb } from \"react-circular-input\";\nimport EnvelopeGraph from \"adsr-envelope-graph\";\nimport PianoRollComponent from \"./PianoRollComponent\";\nimport \"./SynthComponent.css\";\nexport default class SynthComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.oscTypes = [\"triangle\", \"sine\", \"square\"];\n    this.state = {\n      id: 0,\n      oscillator: null,\n      envelope: {\n        attack: 0.005,\n        decay: 0.1,\n        sustain: 0.3,\n        release: 1\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState(_objectSpread({}, this.state, {\n      id: this.props.idx,\n      oscillator: this.props.oscillator,\n      envelope: this.props.envelope,\n      active: false\n    }));\n  }\n\n  updateEnvelope(envKey, newValue) {\n    const newEnvelope = _objectSpread({}, this.state).envelope;\n\n    newEnvelope[envKey] = newValue;\n    this.setState(_objectSpread({}, this.state, {\n      envelope: newEnvelope\n    }), () => {\n      this.updateSynth();\n    });\n  }\n\n  updateOscillator(newValue) {\n    const newOscillator = _objectSpread({}, this.state).oscillator;\n\n    newOscillator.type = newValue.currentTarget.value;\n    this.setState(_objectSpread({}, this.state, {\n      oscillator: newOscillator\n    }), () => {\n      this.updateSynth();\n    });\n  }\n\n  updateSynth() {\n    this.props.updateSynth(this.state.id, {\n      envelope: this.state.envelope,\n      oscillator: this.state.oscillator\n    });\n  }\n\n  updateSynthSequence(notes) {\n    console.log(notes);\n    this.props.updateSynthSequence(this.state.id, notes);\n  }\n\n  activateSynth() {\n    this.props.activateSynth(this.state.id);\n    this.setState(_objectSpread({}, this.state, {\n      active: !this.state.active\n    }));\n  }\n\n  render() {\n    const _this$state$envelope = this.state.envelope,\n          attack = _this$state$envelope.attack,\n          decay = _this$state$envelope.decay,\n          sustain = _this$state$envelope.sustain,\n          release = _this$state$envelope.release;\n    const colors = {\n      attack: '#ff40fc',\n      decay: '#fffc36',\n      sustain: '#00fbfe',\n      release: '#00f92f'\n    };\n    const envelopeControls = {\n      attack,\n      decay,\n      sustain,\n      release\n    };\n    return React.createElement(\"div\", {\n      className: \"synth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"oscillator-controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"activation-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.activateSynth(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.active ? \"OFF\" : \"ON\")), React.createElement(\"div\", {\n      className: \"oscillator-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"oscillator-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"WAVE TYPE\"), React.createElement(\"select\", {\n      id: \"osc-select-\".concat(this.state.id),\n      name: \"oscillator-selector\",\n      onChange: e => this.updateOscillator(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.oscTypes.map(oscType => React.createElement(\"option\", {\n      key: oscType,\n      value: oscType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, oscType.toUpperCase()))))), React.createElement(\"div\", {\n      className: \"envelope-controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(EnvelopeGraph, {\n      className: \"envelope-graph\",\n      a: this.state.envelope.attack,\n      d: this.state.envelope.decay,\n      s: this.state.envelope.sustain,\n      r: this.state.envelope.release,\n      style: {\n        height: \"100px\",\n        width: \"300px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), Object.entries(envelopeControls).map((value, idx) => {\n      return React.createElement(CircularInput, {\n        key: value[0],\n        radius: 35,\n        value: value[1],\n        onChange: e => this.updateEnvelope(value[0], e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(CircularTrack, {\n        strokeWidth: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(CircularProgress, {\n        stroke: colors[value[0]],\n        strokeWidth: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(CircularThumb, {\n        stroke: colors[value[0]],\n        r: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }));\n    })), React.createElement(\"div\", {\n      className: \"sequencer-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(PianoRollComponent, {\n      updateSynthSequence: notes => this.updateSynthSequence(notes),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/fvrh/Documentos/week8/bbrss/src/components/SynthComponent.jsx"],"names":["React","Component","CircularInput","CircularTrack","CircularProgress","CircularThumb","EnvelopeGraph","PianoRollComponent","SynthComponent","oscTypes","state","id","oscillator","envelope","attack","decay","sustain","release","componentDidMount","setState","props","idx","active","updateEnvelope","envKey","newValue","newEnvelope","updateSynth","updateOscillator","newOscillator","type","currentTarget","value","updateSynthSequence","notes","console","log","activateSynth","render","colors","envelopeControls","e","map","oscType","toUpperCase","height","width","Object","entries"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  CircularInput,\n  CircularTrack,\n  CircularProgress,\n  CircularThumb\n} from \"react-circular-input\";\nimport EnvelopeGraph from \"adsr-envelope-graph\";\nimport PianoRollComponent from \"./PianoRollComponent\";\nimport \"./SynthComponent.css\";\n\nexport default class SynthComponent extends Component {\n  oscTypes = [\"triangle\", \"sine\", \"square\"];\n\n  state = {\n    id: 0,\n    oscillator: null,\n    envelope: {\n      attack: 0.005,\n      decay: 0.1,\n      sustain: 0.3,\n      release: 1\n    }\n  };\n\n  componentDidMount() {\n    this.setState({\n      ...this.state,\n      id: this.props.idx,\n      oscillator: this.props.oscillator,\n      envelope: this.props.envelope,\n      active: false\n    });\n  }\n\n  updateEnvelope(envKey, newValue) {\n    const newEnvelope = { ...this.state }.envelope;\n    newEnvelope[envKey] = newValue;\n    this.setState(\n      {\n        ...this.state,\n        envelope: newEnvelope\n      },\n      () => {\n        this.updateSynth();\n      }\n    );\n  }\n\n  updateOscillator(newValue) {\n    const newOscillator = { ...this.state }.oscillator;\n    newOscillator.type = newValue.currentTarget.value;\n    this.setState(\n      {\n        ...this.state,\n        oscillator: newOscillator\n      },\n      () => {\n        this.updateSynth();\n      }\n    );\n  }\n\n  updateSynth() {\n    this.props.updateSynth(this.state.id, {\n      envelope: this.state.envelope,\n      oscillator: this.state.oscillator\n    });\n  }\n\n  updateSynthSequence(notes) {\n    console.log(notes);\n    this.props.updateSynthSequence(this.state.id, notes);\n  }\n\n  activateSynth() {\n    this.props.activateSynth(this.state.id);\n    this.setState({\n      ...this.state,\n      active: !this.state.active\n    });\n  }\n\n  render() {\n    const { attack, decay, sustain, release } = this.state.envelope;\n    const colors = {\n      attack: '#ff40fc', \n      decay: '#fffc36', \n      sustain: '#00fbfe', \n      release: '#00f92f', \n    }\n    const envelopeControls = { attack, decay, sustain, release };\n    return (\n      <div className=\"synth\">\n        {/* Oscillator controls*/}\n        <div className=\"oscillator-controls\">\n          <div className=\"activation-button\">\n            {/* Activate/Deactivate */}\n            <button onClick={() => this.activateSynth()}>\n              {this.state.active ? \"OFF\" : \"ON\"}\n            </button>\n          </div>\n          <div className=\"oscillator-selector\">\n            <label htmlFor=\"oscillator-selector\">WAVE TYPE</label>\n            <select\n              id={`osc-select-${this.state.id}`}\n              name=\"oscillator-selector\"\n              onChange={e => this.updateOscillator(e)}\n            >\n              {this.oscTypes.map(oscType => (\n                <option key={oscType} value={oscType}>\n                  {oscType.toUpperCase()}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {/* Envelope controls*/}\n        <div className=\"envelope-controls\">\n          <EnvelopeGraph\n            className=\"envelope-graph\"\n            a={this.state.envelope.attack}\n            d={this.state.envelope.decay}\n            s={this.state.envelope.sustain}\n            r={this.state.envelope.release}\n            style={{ height: \"100px\", width: \"300px\" }}\n          />\n          {Object.entries(envelopeControls).map((value, idx) => {\n            return (\n              <CircularInput\n                key={value[0]}\n                radius={35}\n                value={value[1]}\n                onChange={e => this.updateEnvelope(value[0], e)}\n              >\n                <CircularTrack strokeWidth={3} />\n                <CircularProgress stroke={colors[value[0]]} strokeWidth={5} />\n                <CircularThumb stroke={colors[value[0]]} r={4} />\n              </CircularInput>\n            );\n          })}\n        </div>\n\n        {/* Sequencer */}\n        <div className=\"sequencer-wrapper\">\n          <PianoRollComponent\n            updateSynthSequence={notes => this.updateSynthSequence(notes)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}