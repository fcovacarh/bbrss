{"ast":null,"code":"import Tone from \"tone\";\nexport default class Instrument {\n  constructor(id, oscType) {\n    this.updateInstrument = props => {\n      this.synth.oscillator.type = props.oscillator.type;\n      this.synth.envelope.attack = props.envelope.attack;\n      this.synth.envelope.decay = props.envelope.decay;\n      this.synth.envelope.sustain = props.envelope.sustain;\n      this.synth.envelope.release = props.envelope.release;\n    };\n\n    this.activateInstrument = () => {\n      console.log(this.sequence);\n\n      if (this.active) {\n        if (this.sequence) {\n          this.sequence.stop();\n        }\n      } else {\n        if (this.sequence) {\n          this.sequence.start();\n        }\n      }\n\n      this.active = !this.active;\n    };\n\n    this.updateSequence = notes => {\n      if (notes.length !== 0) {\n        if (this.active && this.sequence) {\n          this.sequence.stop();\n        }\n\n        this.sequence = new Tone.Sequence((time, note) => {\n          this.synth.triggerAttackRelease(note, \"10hz\", time);\n        }, notes, \"4n\");\n\n        if (this.active) {\n          this.sequence.start();\n        }\n      }\n    };\n\n    this.id = id;\n    this.synth = new Tone.Synth(oscType).toMaster();\n    this.sequence = null;\n    this.active = false;\n  }\n\n}","map":{"version":3,"sources":["/home/fvrh/Documentos/week8/bbrss/src/Instrument.class.js"],"names":["Tone","Instrument","constructor","id","oscType","updateInstrument","props","synth","oscillator","type","envelope","attack","decay","sustain","release","activateInstrument","console","log","sequence","active","stop","start","updateSequence","notes","length","Sequence","time","note","triggerAttackRelease","Synth","toMaster"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,eAAe,MAAMC,UAAN,CAAiB;AAC9BC,EAAAA,WAAW,CAACC,EAAD,EAAKC,OAAL,EAAc;AAAA,SAOzBC,gBAPyB,GAONC,KAAK,IAAI;AAC1B,WAAKC,KAAL,CAAWC,UAAX,CAAsBC,IAAtB,GAA6BH,KAAK,CAACE,UAAN,CAAiBC,IAA9C;AACA,WAAKF,KAAL,CAAWG,QAAX,CAAoBC,MAApB,GAA6BL,KAAK,CAACI,QAAN,CAAeC,MAA5C;AACA,WAAKJ,KAAL,CAAWG,QAAX,CAAoBE,KAApB,GAA4BN,KAAK,CAACI,QAAN,CAAeE,KAA3C;AACA,WAAKL,KAAL,CAAWG,QAAX,CAAoBG,OAApB,GAA8BP,KAAK,CAACI,QAAN,CAAeG,OAA7C;AACA,WAAKN,KAAL,CAAWG,QAAX,CAAoBI,OAApB,GAA8BR,KAAK,CAACI,QAAN,CAAeI,OAA7C;AACD,KAbwB;;AAAA,SAezBC,kBAfyB,GAeJ,MAAM;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,QAAjB;;AACA,UAAI,KAAKC,MAAT,EAAiB;AACf,YAAI,KAAKD,QAAT,EAAmB;AACjB,eAAKA,QAAL,CAAcE,IAAd;AACD;AACF,OAJD,MAIO;AACL,YAAI,KAAKF,QAAT,EAAmB;AACjB,eAAKA,QAAL,CAAcG,KAAd;AACD;AACF;;AACD,WAAKF,MAAL,GAAc,CAAC,KAAKA,MAApB;AACD,KA3BwB;;AAAA,SA6BzBG,cA7ByB,GA6BRC,KAAK,IAAI;AACxB,UAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACtB,YAAG,KAAKL,MAAL,IAAe,KAAKD,QAAvB,EAAgC;AAC9B,eAAKA,QAAL,CAAcE,IAAd;AACD;;AACD,aAAKF,QAAL,GAAgB,IAAIlB,IAAI,CAACyB,QAAT,CACd,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACd,eAAKpB,KAAL,CAAWqB,oBAAX,CAAgCD,IAAhC,EAAsC,MAAtC,EAA8CD,IAA9C;AACD,SAHa,EAIdH,KAJc,EAKd,IALc,CAAhB;;AAOA,YAAG,KAAKJ,MAAR,EAAgB;AACd,eAAKD,QAAL,CAAcG,KAAd;AACD;AACF;AACF,KA7CwB;;AACvB,SAAKlB,EAAL,GAAUA,EAAV;AACA,SAAKI,KAAL,GAAa,IAAIP,IAAI,CAAC6B,KAAT,CAAezB,OAAf,EAAwB0B,QAAxB,EAAb;AACA,SAAKZ,QAAL,GAAgB,IAAhB;AACA,SAAKC,MAAL,GAAc,KAAd;AACD;;AAN6B","sourcesContent":["import Tone from \"tone\";\n\nexport default class Instrument {\n  constructor(id, oscType) {\n    this.id = id;\n    this.synth = new Tone.Synth(oscType).toMaster();\n    this.sequence = null;\n    this.active = false;\n  }\n\n  updateInstrument = props => {\n    this.synth.oscillator.type = props.oscillator.type;\n    this.synth.envelope.attack = props.envelope.attack;\n    this.synth.envelope.decay = props.envelope.decay;\n    this.synth.envelope.sustain = props.envelope.sustain;\n    this.synth.envelope.release = props.envelope.release;\n  };\n\n  activateInstrument = () => {\n    console.log(this.sequence)\n    if (this.active) {\n      if (this.sequence) {\n        this.sequence.stop();\n      }\n    } else {\n      if (this.sequence) {\n        this.sequence.start();\n      }\n    }\n    this.active = !this.active;\n  };\n\n  updateSequence = notes => {\n    if (notes.length !== 0) {\n      if(this.active && this.sequence){\n        this.sequence.stop();\n      }\n      this.sequence = new Tone.Sequence(\n        (time, note) => {\n          this.synth.triggerAttackRelease(note, \"10hz\", time);\n        },\n        notes,\n        \"4n\"\n      );\n      if(this.active) {\n        this.sequence.start();\n      }\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}