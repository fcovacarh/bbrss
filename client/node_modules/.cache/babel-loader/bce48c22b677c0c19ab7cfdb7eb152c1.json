{"ast":null,"code":"import _objectSpread from \"/home/fvrh/Documentos/week8/bbrss/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/fvrh/Documentos/week8/bbrss/src/SynthComponent.js\";\nimport React, { Component } from \"react\";\nimport { CircularInput, CircularTrack, CircularProgress, CircularThumb } from \"react-circular-input\";\nexport default class SynthComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: null,\n      oscillator: {\n        type: \"triangle\"\n      },\n      envelope: {\n        attack: 0.005,\n        decay: 0.1,\n        sustain: 0.3,\n        release: 1\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState(_objectSpread({}, this.state, {\n      id: this.props.idx,\n      oscillator: this.props.oscillator,\n      envelope: this.props.envelope,\n      active: false\n    }));\n  }\n\n  updateEnvelope(envKey, newValue) {\n    const newEnvelope = _objectSpread({}, this.state.envelope);\n\n    newEnvelope[envKey] = newValue;\n    this.setState(_objectSpread({}, this.state, {\n      envelope: newEnvelope\n    }));\n    this.props.updateSynth(this.state.id, {\n      envelope: _objectSpread({}, this.state.envelope),\n      oscillator: _objectSpread({}, this.state.oscillator)\n    });\n  }\n\n  playNotes(note) {\n    this.props.playSynth(this.state.id, note);\n  }\n\n  render() {\n    //Envelope controllers\n    const _this$state$envelope = this.state.envelope,\n          attack = _this$state$envelope.attack,\n          decay = _this$state$envelope.decay,\n          sustain = _this$state$envelope.sustain,\n          release = _this$state$envelope.release;\n    const envelopeControls = {\n      attack,\n      decay,\n      sustain,\n      release\n    };\n    return React.createElement(\"div\", {\n      className: \"envelope-controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, Object.entries(envelopeControls).map(value => {\n      return React.createElement(CircularInput, {\n        key: value[0],\n        radius: 35,\n        value: value[1],\n        onChange: e => this.updateEnvelope(value[0], e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(CircularTrack, {\n        strokeWidth: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(CircularProgress, {\n        strokeWidth: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(CircularThumb, {\n        r: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    }), React.createElement(\"button\", {\n      onClick: () => this.playNotes([\"E4\", [\"E4\", \"G4\", \"B4\"], \"F4\", ['F4', 'A4', 'C5']]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/fvrh/Documentos/week8/bbrss/src/SynthComponent.js"],"names":["React","Component","CircularInput","CircularTrack","CircularProgress","CircularThumb","SynthComponent","state","id","oscillator","type","envelope","attack","decay","sustain","release","componentDidMount","setState","props","idx","active","updateEnvelope","envKey","newValue","newEnvelope","updateSynth","playNotes","note","playSynth","render","envelopeControls","Object","entries","map","value","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  CircularInput,\n  CircularTrack,\n  CircularProgress,\n  CircularThumb\n} from \"react-circular-input\";\n\nexport default class SynthComponent extends Component {\n  state = {\n    id: null,\n    oscillator: {\n      type: \"triangle\"\n    },\n    envelope: {\n      attack: 0.005,\n      decay: 0.1,\n      sustain: 0.3,\n      release: 1\n    }\n  };\n\n  componentDidMount() {\n    this.setState({\n      ...this.state,\n      id: this.props.idx,\n      oscillator: this.props.oscillator,\n      envelope: this.props.envelope,\n      active: false\n    });\n  }\n\n  updateEnvelope(envKey, newValue) {\n    const newEnvelope = { ...this.state.envelope };\n    newEnvelope[envKey] = newValue;\n    this.setState({\n      ...this.state,\n      envelope: newEnvelope\n    });\n    this.props.updateSynth(this.state.id, {\n      envelope: { ...this.state.envelope },\n      oscillator: { ...this.state.oscillator }\n    });\n  }\n\n  playNotes(note) {\n    this.props.playSynth(this.state.id, note);\n  }\n\n  render() {\n    //Envelope controllers\n    const { attack, decay, sustain, release } = this.state.envelope;\n    const envelopeControls = { attack, decay, sustain, release };\n    return (\n      <div className=\"envelope-controls\">\n        {Object.entries(envelopeControls).map(value => {\n          return (\n            <CircularInput\n              key={value[0]}\n              radius={35}\n              value={value[1]}\n              onChange={e => this.updateEnvelope(value[0], e)}\n            >\n              <CircularTrack strokeWidth={3} />\n              <CircularProgress strokeWidth={5} />\n              <CircularThumb r={4} />\n            </CircularInput>\n          );\n        })}\n        <button\n          onClick={() => this.playNotes([\"E4\", [\"E4\", \"G4\", \"B4\"], \"F4\", ['F4', 'A4', 'C5']])}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}