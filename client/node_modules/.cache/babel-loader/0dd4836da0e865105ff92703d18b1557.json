{"ast":null,"code":"var _jsxFileName = \"/home/fvrh/Documentos/week8/bbrss/src/components/PianoRollComponent.jsx\";\nimport React, { Component } from \"react\";\nconst notes = [\"B\", \"A#\", \"A\", \"G#\", \"G\", \"F#\", \"F\", \"E\", \"D#\", \"D\", \"C#\", \"C\"];\nexport default class PianoRollComponent extends Component {\n  componentDidMount() {\n    const initialScale = 1,\n          toScale = 6,\n          rows = 12,\n          cols = 16;\n\n    for (let scale = toScale; scale > initialScale - 1; scale--) {\n      for (let i = 0; i < rows; i++) {\n        let step = true;\n        let row = document.createElement(\"tr\");\n        let noteRow = document.createElement(\"th\");\n        noteRow.className = \"note-cell\";\n        noteRow.innerHTML = notes[i] + scale;\n        row.appendChild(noteRow);\n\n        for (let j = 0; j < cols; j++) {\n          let col = document.createElement(\"td\");\n          if (j % 4 === 0) step = !step;\n          if (step) col.className = \"cell-bar\";\n          col.setAttribute(\"note\", notes[i]);\n          col.setAttribute(\"scale\", scale);\n          col.setAttribute(\"step\", j);\n          col.addEventListener(\"click\", activateCell);\n          row.appendChild(col);\n        }\n\n        document.querySelector('#sequencer').appendChild(row);\n      }\n    }\n  }\n\n  activateCell(e) {\n    const element = e.target;\n    element.classList.toggle('cell-active');\n    reReadSequence();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"sequencer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/fvrh/Documentos/week8/bbrss/src/components/PianoRollComponent.jsx"],"names":["React","Component","notes","PianoRollComponent","componentDidMount","initialScale","toScale","rows","cols","scale","i","step","row","document","createElement","noteRow","className","innerHTML","appendChild","j","col","setAttribute","addEventListener","activateCell","querySelector","e","element","target","classList","toggle","reReadSequence","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,KAAK,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,IAAjB,EAAuB,GAAvB,EAA4B,IAA5B,EAAkC,GAAlC,EAAuC,GAAvC,EAA4C,IAA5C,EAAkD,GAAlD,EAAuD,IAAvD,EAA6D,GAA7D,CAAd;AAEA,eAAe,MAAMC,kBAAN,SAAiCF,SAAjC,CAA2C;AACtDG,EAAAA,iBAAiB,GAAG;AACpB,UAAMC,YAAY,GAAG,CAArB;AAAA,UAAwBC,OAAO,GAAG,CAAlC;AAAA,UAAqCC,IAAI,GAAG,EAA5C;AAAA,UAAgDC,IAAI,GAAG,EAAvD;;AACA,SAAK,IAAIC,KAAK,GAAGH,OAAjB,EAA0BG,KAAK,GAAGJ,YAAY,GAAG,CAAjD,EAAoDI,KAAK,EAAzD,EAA6D;AAC3D,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAApB,EAA0BG,CAAC,EAA3B,EAA+B;AAC7B,YAAIC,IAAI,GAAG,IAAX;AACA,YAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAV;AACA,YAAIC,OAAO,GAAGF,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAd;AACAC,QAAAA,OAAO,CAACC,SAAR,GAAoB,WAApB;AACAD,QAAAA,OAAO,CAACE,SAAR,GAAoBf,KAAK,CAACQ,CAAD,CAAL,GAAWD,KAA/B;AACAG,QAAAA,GAAG,CAACM,WAAJ,CAAgBH,OAAhB;;AAEA,aAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,IAApB,EAA0BW,CAAC,EAA3B,EAA+B;AAC7B,cAAIC,GAAG,GAAGP,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAV;AACA,cAAIK,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiBR,IAAI,GAAG,CAACA,IAAR;AACjB,cAAIA,IAAJ,EAAUS,GAAG,CAACJ,SAAJ,GAAgB,UAAhB;AACVI,UAAAA,GAAG,CAACC,YAAJ,CAAiB,MAAjB,EAAyBnB,KAAK,CAACQ,CAAD,CAA9B;AACAU,UAAAA,GAAG,CAACC,YAAJ,CAAiB,OAAjB,EAA0BZ,KAA1B;AACAW,UAAAA,GAAG,CAACC,YAAJ,CAAiB,MAAjB,EAAyBF,CAAzB;AACAC,UAAAA,GAAG,CAACE,gBAAJ,CAAqB,OAArB,EAA8BC,YAA9B;AACAX,UAAAA,GAAG,CAACM,WAAJ,CAAgBE,GAAhB;AACD;;AACDP,QAAAA,QAAQ,CAACW,aAAT,CAAuB,YAAvB,EAAqCN,WAArC,CAAiDN,GAAjD;AACD;AACF;AACF;;AAEDW,EAAAA,YAAY,CAACE,CAAD,EAAI;AACd,UAAMC,OAAO,GAAGD,CAAC,CAACE,MAAlB;AACAD,IAAAA,OAAO,CAACE,SAAR,CAAkBC,MAAlB,CAAyB,aAAzB;AACAC,IAAAA,cAAc;AACf;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAnCuD","sourcesContent":["import React, { Component } from \"react\";\n\nconst notes = [\"B\", \"A#\", \"A\", \"G#\", \"G\", \"F#\", \"F\", \"E\", \"D#\", \"D\", \"C#\", \"C\"];\n\nexport default class PianoRollComponent extends Component {\n    componentDidMount() {\n    const initialScale = 1, toScale = 6, rows = 12, cols = 16;\n    for (let scale = toScale; scale > initialScale - 1; scale--) {\n      for (let i = 0; i < rows; i++) {\n        let step = true;\n        let row = document.createElement(\"tr\");\n        let noteRow = document.createElement(\"th\");\n        noteRow.className = \"note-cell\";\n        noteRow.innerHTML = notes[i] + scale;\n        row.appendChild(noteRow);\n\n        for (let j = 0; j < cols; j++) {\n          let col = document.createElement(\"td\");\n          if (j % 4 === 0) step = !step;\n          if (step) col.className = \"cell-bar\";\n          col.setAttribute(\"note\", notes[i]);\n          col.setAttribute(\"scale\", scale);\n          col.setAttribute(\"step\", j);\n          col.addEventListener(\"click\", activateCell);\n          row.appendChild(col);\n        }\n        document.querySelector('#sequencer').appendChild(row);\n      }\n    }\n  }\n\n  activateCell(e) {\n    const element = e.target;\n    element.classList.toggle('cell-active');\n    reReadSequence();\n  };\n\n  render() {\n    return <div id=\"sequencer\"></div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}