{"ast":null,"code":"import Tone from \"tone\";\nexport default class Instrument {\n  constructor(id, oscType) {\n    this.updateInstrument = props => {\n      console.log(props.oscillator.type);\n      this.synth.oscillator.type = props.oscillator.type;\n      this.synth.envelope.attack = props.envelope.attack;\n      this.synth.envelope.decay = props.envelope.decay;\n      this.synth.envelope.sustain = props.envelope.sustain;\n      this.synth.envelope.release = props.envelope.release;\n    };\n\n    this.activateInstrument = () => {\n      if (this.active) {\n        console.log(\"Deactivating synth \".concat(this.id));\n\n        if (this.sequence) {\n          this.sequence.stop();\n        }\n      } else {\n        console.log(\"Activating synth \".concat(this.id));\n\n        if (this.sequence) {\n          this.sequence.start();\n        }\n      }\n\n      this.active = !this.active;\n    };\n\n    this.updateSequence = notes => {\n      if (notes.length === 0) {\n        this.sequence = new Tone.Sequence((time, note) => {\n          this.synth.triggerAttackRelease(note, \"10hz\", time);\n        }, notes, \"4n\");\n      }\n    };\n\n    this.id = id;\n    this.synth = new Tone.Synth(oscType).toMaster();\n    this.sequence = null;\n    this.active = false;\n  }\n\n}","map":{"version":3,"sources":["/home/fvrh/Documentos/week8/bbrss/src/Instrument.class.js"],"names":["Tone","Instrument","constructor","id","oscType","updateInstrument","props","console","log","oscillator","type","synth","envelope","attack","decay","sustain","release","activateInstrument","active","sequence","stop","start","updateSequence","notes","length","Sequence","time","note","triggerAttackRelease","Synth","toMaster"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,eAAe,MAAMC,UAAN,CAAiB;AAC9BC,EAAAA,WAAW,CAACC,EAAD,EAAKC,OAAL,EAAc;AAAA,SAOzBC,gBAPyB,GAONC,KAAK,IAAI;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAN,CAAiBC,IAA7B;AACA,WAAKC,KAAL,CAAWF,UAAX,CAAsBC,IAAtB,GAA6BJ,KAAK,CAACG,UAAN,CAAiBC,IAA9C;AACA,WAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,GAA6BP,KAAK,CAACM,QAAN,CAAeC,MAA5C;AACA,WAAKF,KAAL,CAAWC,QAAX,CAAoBE,KAApB,GAA4BR,KAAK,CAACM,QAAN,CAAeE,KAA3C;AACA,WAAKH,KAAL,CAAWC,QAAX,CAAoBG,OAApB,GAA8BT,KAAK,CAACM,QAAN,CAAeG,OAA7C;AACA,WAAKJ,KAAL,CAAWC,QAAX,CAAoBI,OAApB,GAA8BV,KAAK,CAACM,QAAN,CAAeI,OAA7C;AACD,KAdwB;;AAAA,SAgBzBC,kBAhByB,GAgBJ,MAAM;AACzB,UAAI,KAAKC,MAAT,EAAiB;AACfX,QAAAA,OAAO,CAACC,GAAR,8BAAkC,KAAKL,EAAvC;;AACA,YAAI,KAAKgB,QAAT,EAAmB;AACjB,eAAKA,QAAL,CAAcC,IAAd;AACD;AACF,OALD,MAKO;AACLb,QAAAA,OAAO,CAACC,GAAR,4BAAgC,KAAKL,EAArC;;AACA,YAAI,KAAKgB,QAAT,EAAmB;AACjB,eAAKA,QAAL,CAAcE,KAAd;AACD;AACF;;AACD,WAAKH,MAAL,GAAc,CAAC,KAAKA,MAApB;AACD,KA7BwB;;AAAA,SA+BzBI,cA/ByB,GA+BRC,KAAK,IAAI;AACxB,UAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACtB,aAAKL,QAAL,GAAgB,IAAInB,IAAI,CAACyB,QAAT,CACd,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACd,eAAKhB,KAAL,CAAWiB,oBAAX,CAAgCD,IAAhC,EAAsC,MAAtC,EAA8CD,IAA9C;AACD,SAHa,EAIdH,KAJc,EAKd,IALc,CAAhB;AAOD;AACF,KAzCwB;;AACvB,SAAKpB,EAAL,GAAUA,EAAV;AACA,SAAKQ,KAAL,GAAa,IAAIX,IAAI,CAAC6B,KAAT,CAAezB,OAAf,EAAwB0B,QAAxB,EAAb;AACA,SAAKX,QAAL,GAAgB,IAAhB;AACA,SAAKD,MAAL,GAAc,KAAd;AACD;;AAN6B","sourcesContent":["import Tone from \"tone\";\n\nexport default class Instrument {\n  constructor(id, oscType) {\n    this.id = id;\n    this.synth = new Tone.Synth(oscType).toMaster();\n    this.sequence = null;\n    this.active = false;\n  }\n\n  updateInstrument = props => {\n    console.log(props.oscillator.type);\n    this.synth.oscillator.type = props.oscillator.type;\n    this.synth.envelope.attack = props.envelope.attack;\n    this.synth.envelope.decay = props.envelope.decay;\n    this.synth.envelope.sustain = props.envelope.sustain;\n    this.synth.envelope.release = props.envelope.release;\n  };\n\n  activateInstrument = () => {\n    if (this.active) {\n      console.log(`Deactivating synth ${this.id}`);\n      if (this.sequence) {\n        this.sequence.stop();\n      }\n    } else {\n      console.log(`Activating synth ${this.id}`);\n      if (this.sequence) {\n        this.sequence.start();\n      }\n    }\n    this.active = !this.active;\n  };\n\n  updateSequence = notes => {\n    if (notes.length === 0) {\n      this.sequence = new Tone.Sequence(\n        (time, note) => {\n          this.synth.triggerAttackRelease(note, \"10hz\", time);\n        },\n        notes,\n        \"4n\"\n      );\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}