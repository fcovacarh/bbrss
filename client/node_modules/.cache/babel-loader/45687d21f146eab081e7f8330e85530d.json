{"ast":null,"code":"import Tone from \"tone\";\n\nclass Song {\n  constructor() {\n    this.addSynth = () => {\n      this.instruments.push(new Tone.Synth().toMaster());\n      return this.getSynths();\n    };\n\n    this.getSynths = () => {\n      return this.instruments;\n    };\n\n    this.getSynth = idx => {\n      return this.instruments[idx];\n    };\n\n    this.updateSynth = (idx, props) => {\n      //Envelope update\n      this.instruments[idx].envelope.attack = props.envelope.attack;\n      this.instruments[idx].envelope.decay = props.envelope.decay;\n      this.instruments[idx].envelope.sustain = props.envelope.sustain;\n      this.instruments[idx].envelope.release = props.envelope.release;\n    };\n\n    this.playSynth = (idx, notes = []) => {\n      const synthPart = new Tone.Sequence((time, note) => {\n        this.instruments[idx].triggerAttackRelease(note, time);\n      }, notes, \"1n\");\n      console.log('synth active');\n      synthPart.start();\n    };\n\n    this.play = () => {\n      Tone.Transport.start();\n    };\n\n    this.stop = () => {\n      console.log('stop');\n      Tone.Transport.stop();\n    };\n\n    this.tempo = 120;\n    this.instruments = [];\n    this.sequences = [];\n  }\n\n}\n\nexport default Song;","map":{"version":3,"sources":["/home/fvrh/Documentos/week8/bbrss/src/Song.js"],"names":["Tone","Song","constructor","addSynth","instruments","push","Synth","toMaster","getSynths","getSynth","idx","updateSynth","props","envelope","attack","decay","sustain","release","playSynth","notes","synthPart","Sequence","time","note","triggerAttackRelease","console","log","start","play","Transport","stop","tempo","sequences"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,GAAG;AAAA,SAMdC,QANc,GAMH,MAAM;AACf,WAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAIL,IAAI,CAACM,KAAT,GAAiBC,QAAjB,EAAtB;AACA,aAAO,KAAKC,SAAL,EAAP;AACD,KATa;;AAAA,SAWdA,SAXc,GAWF,MAAM;AAChB,aAAO,KAAKJ,WAAZ;AACD,KAba;;AAAA,SAedK,QAfc,GAeHC,GAAG,IAAI;AAChB,aAAO,KAAKN,WAAL,CAAiBM,GAAjB,CAAP;AACD,KAjBa;;AAAA,SAmBdC,WAnBc,GAmBA,CAACD,GAAD,EAAME,KAAN,KAAgB;AAC5B;AACA,WAAKR,WAAL,CAAiBM,GAAjB,EAAsBG,QAAtB,CAA+BC,MAA/B,GAAwCF,KAAK,CAACC,QAAN,CAAeC,MAAvD;AACA,WAAKV,WAAL,CAAiBM,GAAjB,EAAsBG,QAAtB,CAA+BE,KAA/B,GAAuCH,KAAK,CAACC,QAAN,CAAeE,KAAtD;AACA,WAAKX,WAAL,CAAiBM,GAAjB,EAAsBG,QAAtB,CAA+BG,OAA/B,GAAyCJ,KAAK,CAACC,QAAN,CAAeG,OAAxD;AACA,WAAKZ,WAAL,CAAiBM,GAAjB,EAAsBG,QAAtB,CAA+BI,OAA/B,GAAyCL,KAAK,CAACC,QAAN,CAAeI,OAAxD;AACD,KAzBa;;AAAA,SA2BdC,SA3Bc,GA2BF,CAACR,GAAD,EAAMS,KAAK,GAAG,EAAd,KAAqB;AAC/B,YAAMC,SAAS,GAAG,IAAIpB,IAAI,CAACqB,QAAT,CAChB,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACd,aAAKnB,WAAL,CAAiBM,GAAjB,EAAsBc,oBAAtB,CAA2CD,IAA3C,EAAiDD,IAAjD;AACD,OAHe,EAIhBH,KAJgB,EAKhB,IALgB,CAAlB;AAOAM,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAN,MAAAA,SAAS,CAACO,KAAV;AACD,KArCa;;AAAA,SAuCdC,IAvCc,GAuCP,MAAM;AACX5B,MAAAA,IAAI,CAAC6B,SAAL,CAAeF,KAAf;AACD,KAzCa;;AAAA,SA2CdG,IA3Cc,GA2CP,MAAM;AACTL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACF1B,MAAAA,IAAI,CAAC6B,SAAL,CAAeC,IAAf;AACD,KA9Ca;;AACZ,SAAKC,KAAL,GAAa,GAAb;AACA,SAAK3B,WAAL,GAAmB,EAAnB;AACA,SAAK4B,SAAL,GAAiB,EAAjB;AACD;;AALQ;;AAkDX,eAAe/B,IAAf","sourcesContent":["import Tone from \"tone\";\n\nclass Song {\n  constructor() {\n    this.tempo = 120;\n    this.instruments = [];\n    this.sequences = [];\n  }\n\n  addSynth = () => {\n    this.instruments.push(new Tone.Synth().toMaster());\n    return this.getSynths();\n  };\n\n  getSynths = () => {\n    return this.instruments;\n  };\n\n  getSynth = idx => {\n    return this.instruments[idx];\n  };\n\n  updateSynth = (idx, props) => {\n    //Envelope update\n    this.instruments[idx].envelope.attack = props.envelope.attack;\n    this.instruments[idx].envelope.decay = props.envelope.decay;\n    this.instruments[idx].envelope.sustain = props.envelope.sustain;\n    this.instruments[idx].envelope.release = props.envelope.release;\n  };\n\n  playSynth = (idx, notes = []) => {\n    const synthPart = new Tone.Sequence(\n      (time, note) => {\n        this.instruments[idx].triggerAttackRelease(note, time);\n      },\n      notes,\n      \"1n\"\n    );\n    console.log('synth active');\n    synthPart.start();\n  };\n\n  play = () => {\n    Tone.Transport.start();\n  };\n\n  stop = () => {\n      console.log('stop');\n    Tone.Transport.stop();\n  };\n}\n\nexport default Song;\n"]},"metadata":{},"sourceType":"module"}