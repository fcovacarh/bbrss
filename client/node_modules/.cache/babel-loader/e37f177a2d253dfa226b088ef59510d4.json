{"ast":null,"code":"import Tone from 'tone';\n\nclass Song {\n  constructor() {\n    this.addSynth = () => {\n      this.instruments.push(new Tone.Synth().toMaster());\n      return this.getSynths();\n    };\n\n    this.getSynths = () => {\n      return this.instruments;\n    };\n\n    this.getSynth = idx => {\n      return this.instruments[idx];\n    };\n\n    this.updateSynth = (idx, props) => {\n      //Envelope update\n      this.instruments[idx].envelope.attack = props.envelope.attack;\n      this.instruments[idx].envelope.decay = props.envelope.decay;\n      this.instruments[idx].envelope.sustain = props.envelope.sustain;\n      this.instruments[idx].envelope.release = props.envelope.release;\n    };\n\n    this.tempo = 120;\n    this.instruments = [];\n    this.sequences = [];\n  }\n\n  play(idx, notes = []) {\n    const seq = new Tone.Sequence((time, note) => {\n      this.instruments[idx].triggerAttackRelease(note, time);\n    }, notes, '8n');\n  }\n\n}\n\nexport default Song;","map":{"version":3,"sources":["/home/fvrh/Documentos/week8/bbrss/src/Song.js"],"names":["Tone","Song","constructor","addSynth","instruments","push","Synth","toMaster","getSynths","getSynth","idx","updateSynth","props","envelope","attack","decay","sustain","release","tempo","sequences","play","notes","seq","Sequence","time","note","triggerAttackRelease"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,IAAN,CAAW;AACPC,EAAAA,WAAW,GAAG;AAAA,SAMdC,QANc,GAMH,MAAM;AACb,WAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAIL,IAAI,CAACM,KAAT,GAAiBC,QAAjB,EAAtB;AACA,aAAO,KAAKC,SAAL,EAAP;AACH,KATa;;AAAA,SAWdA,SAXc,GAWF,MAAM;AACd,aAAO,KAAKJ,WAAZ;AACH,KAba;;AAAA,SAedK,QAfc,GAeFC,GAAD,IAAS;AAChB,aAAO,KAAKN,WAAL,CAAiBM,GAAjB,CAAP;AACH,KAjBa;;AAAA,SAmBdC,WAnBc,GAmBA,CAACD,GAAD,EAAME,KAAN,KAAgB;AAC1B;AACA,WAAKR,WAAL,CAAiBM,GAAjB,EAAsBG,QAAtB,CAA+BC,MAA/B,GAAwCF,KAAK,CAACC,QAAN,CAAeC,MAAvD;AACA,WAAKV,WAAL,CAAiBM,GAAjB,EAAsBG,QAAtB,CAA+BE,KAA/B,GAAuCH,KAAK,CAACC,QAAN,CAAeE,KAAtD;AACA,WAAKX,WAAL,CAAiBM,GAAjB,EAAsBG,QAAtB,CAA+BG,OAA/B,GAAyCJ,KAAK,CAACC,QAAN,CAAeG,OAAxD;AACA,WAAKZ,WAAL,CAAiBM,GAAjB,EAAsBG,QAAtB,CAA+BI,OAA/B,GAAyCL,KAAK,CAACC,QAAN,CAAeI,OAAxD;AACH,KAzBa;;AACV,SAAKC,KAAL,GAAa,GAAb;AACA,SAAKd,WAAL,GAAmB,EAAnB;AACA,SAAKe,SAAL,GAAiB,EAAjB;AACH;;AAuBDC,EAAAA,IAAI,CAACV,GAAD,EAAMW,KAAK,GAAG,EAAd,EAAiB;AACjB,UAAMC,GAAG,GAAG,IAAItB,IAAI,CAACuB,QAAT,CAAkB,CAACC,IAAD,EAAOC,IAAP,KAAe;AACzC,WAAKrB,WAAL,CAAiBM,GAAjB,EAAsBgB,oBAAtB,CAA2CD,IAA3C,EAAiDD,IAAjD;AACH,KAFW,EAETH,KAFS,EAEF,IAFE,CAAZ;AAGH;;AAhCM;;AAmCX,eAAepB,IAAf","sourcesContent":["import Tone from 'tone';\n\nclass Song {\n    constructor() {\n        this.tempo = 120;\n        this.instruments = [];\n        this.sequences = []\n    }\n\n    addSynth = () => {\n        this.instruments.push(new Tone.Synth().toMaster());\n        return this.getSynths();\n    }\n\n    getSynths = () => {\n        return this.instruments;\n    }\n\n    getSynth = (idx) => {\n        return this.instruments[idx];\n    }\n\n    updateSynth = (idx, props) => {\n        //Envelope update\n        this.instruments[idx].envelope.attack = props.envelope.attack;\n        this.instruments[idx].envelope.decay = props.envelope.decay;\n        this.instruments[idx].envelope.sustain = props.envelope.sustain;\n        this.instruments[idx].envelope.release = props.envelope.release;\n    }\n\n    play(idx, notes = []){\n        const seq = new Tone.Sequence((time, note)=> {\n            this.instruments[idx].triggerAttackRelease(note, time)\n        }, notes, '8n');\n    }\n}\n\nexport default Song;"]},"metadata":{},"sourceType":"module"}