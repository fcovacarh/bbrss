{"ast":null,"code":"import _objectSpread from \"/home/fvrh/Documentos/week8/bbrss/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/fvrh/Documentos/week8/bbrss/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport ControlsBar from \"./ControlsBar\";\nimport Song from \"./Song.js\";\nimport Synth from \"./Synth\";\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      song: new Song()\n    };\n  }\n\n  addNewSynth() {\n    const newSong = _objectSpread({}, this.state.song);\n\n    newSong.instruments = this.state.song.addSynth();\n    this.setState(_objectSpread({}, this.state, {\n      song: newSong\n    }));\n  }\n\n  updateSynth(idx, props) {\n    const newSong = _objectSpread({}, this.state.song);\n\n    newSong.instruments = this.state.song.updateSynth(idx, props);\n    this.setState(_objectSpread({}, this.state, {\n      song: newSong\n    }));\n  }\n\n  render() {\n    const synths = this.state.song.getSynths();\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(ControlsBar, {\n      addSynth: () => this.addNewSynth(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"synth-rack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, synths.map((synth, idx) => React.createElement(Synth, Object.assign({\n      key: idx\n    }, synth, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/fvrh/Documentos/week8/bbrss/src/App.js"],"names":["React","ControlsBar","Song","Synth","App","Component","state","song","addNewSynth","newSong","instruments","addSynth","setState","updateSynth","idx","props","render","synths","getSynths","map","synth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AACNC,MAAAA,IAAI,EAAE,IAAIL,IAAJ;AADA,KADuC;AAAA;;AAK/CM,EAAAA,WAAW,GAAG;AACZ,UAAMC,OAAO,qBAAQ,KAAKH,KAAL,CAAWC,IAAnB,CAAb;;AACAE,IAAAA,OAAO,CAACC,WAAR,GAAsB,KAAKJ,KAAL,CAAWC,IAAX,CAAgBI,QAAhB,EAAtB;AACA,SAAKC,QAAL,mBACK,KAAKN,KADV;AAEEC,MAAAA,IAAI,EAAEE;AAFR;AAID;;AAEDI,EAAAA,WAAW,CAACC,GAAD,EAAMC,KAAN,EAAa;AACtB,UAAMN,OAAO,qBAAQ,KAAKH,KAAL,CAAWC,IAAnB,CAAb;;AACAE,IAAAA,OAAO,CAACC,WAAR,GAAsB,KAAKJ,KAAL,CAAWC,IAAX,CAAgBM,WAAhB,CAA4BC,GAA5B,EAAiCC,KAAjC,CAAtB;AACA,SAAKH,QAAL,mBACK,KAAKN,KADV;AAEEC,MAAAA,IAAI,EAAEE;AAFR;AAID;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKX,KAAL,CAAWC,IAAX,CAAgBW,SAAhB,EAAf;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,MAAM,KAAKV,WAAL,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGS,MAAM,CAACE,GAAP,CAAW,CAACC,KAAD,EAAQN,GAAR,KACV,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA;AAAZ,OAAqBM,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CADH,CAFF,CADF;AAUD;;AAnC8C","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport ControlsBar from \"./ControlsBar\";\nimport Song from \"./Song.js\";\nimport Synth from \"./Synth\";\n\nexport default class App extends React.Component {\n  state = {\n    song: new Song()\n  };\n\n  addNewSynth() {\n    const newSong = { ...this.state.song };\n    newSong.instruments = this.state.song.addSynth();\n    this.setState({\n      ...this.state,\n      song: newSong\n    });\n  }\n\n  updateSynth(idx, props) {\n    const newSong = { ...this.state.song };\n    newSong.instruments = this.state.song.updateSynth(idx, props);\n    this.setState({\n      ...this.state,\n      song: newSong\n    });\n  }\n\n  render() {\n    const synths = this.state.song.getSynths();\n    return (\n      <div className=\"App\">\n        <ControlsBar addSynth={() => this.addNewSynth()} />\n        <div className=\"synth-rack\">\n          {synths.map((synth, idx) => (\n            <Synth key={idx} {...synth} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}