{"ast":null,"code":"import _objectSpread from \"/home/fvrh/Documentos/week8/bbrss/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/fvrh/Documentos/week8/bbrss/src/SynthComponent.js\";\nimport React, { Component } from \"react\";\nimport { CircularInput, CircularTrack, CircularProgress, CircularThumb } from \"react-circular-input\";\nexport default class SynthComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.oscTypes = [\"triangle\", \"sine\", \"saw\", \"square\"];\n    this.state = {\n      id: null,\n      oscillator: {\n        type: \"triangle\"\n      },\n      envelope: {\n        attack: 0.005,\n        decay: 0.1,\n        sustain: 0.3,\n        release: 1\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState(_objectSpread({}, this.state, {\n      id: this.props.idx,\n      oscillator: this.props.oscillator,\n      envelope: this.props.envelope,\n      active: false\n    }));\n  }\n\n  updateEnvelope(envKey, newValue) {\n    const newEnvelope = _objectSpread({}, this.state.envelope);\n\n    newEnvelope[envKey] = newValue;\n    this.setState(_objectSpread({}, this.state, {\n      envelope: newEnvelope\n    }));\n    this.updateSynth();\n  }\n\n  updateOscillator(newValue) {\n    const newOscillator = _objectSpread({}, this.state.oscillator);\n\n    newOscillator._oscillator._type = newValue;\n    this.setState(_objectSpread({}, this.state, {\n      oscillator: newOscillator\n    }));\n    this.updateSynth();\n  }\n\n  updateSynth() {\n    console.log(this.state.oscillator);\n    this.props.updateSynth(this.state.id, {\n      envelope: _objectSpread({}, this.state.envelope),\n      oscillator: _objectSpread({}, this.state.oscillator)\n    });\n  }\n\n  playNotes(note) {\n    this.props.playSynth(this.state.id, note);\n    this.setState(_objectSpread({}, this.state, {\n      active: !this.state.active\n    }));\n  }\n\n  render() {\n    //Envelope controllers\n    const _this$state$envelope = this.state.envelope,\n          attack = _this$state$envelope.attack,\n          decay = _this$state$envelope.decay,\n          sustain = _this$state$envelope.sustain,\n          release = _this$state$envelope.release;\n    const envelopeControls = {\n      attack,\n      decay,\n      sustain,\n      release\n    };\n    return React.createElement(\"div\", {\n      className: \"synth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"oscillator-controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"osc-select-\".concat(this.state.id),\n      onChange: e => this.updateOscillator(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.oscTypes.map(oscType => React.createElement(\"option\", {\n      key: oscType,\n      value: oscType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, oscType.toUpperCase())))), React.createElement(\"div\", {\n      className: \"envelope-controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, Object.entries(envelopeControls).map(value => {\n      return React.createElement(CircularInput, {\n        key: value[0],\n        radius: 35,\n        value: value[1],\n        onChange: e => this.updateEnvelope(value[0], e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(CircularTrack, {\n        strokeWidth: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(CircularProgress, {\n        strokeWidth: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(CircularThumb, {\n        r: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    }), React.createElement(\"button\", {\n      onClick: () => this.playNotes([\"E4\", [\"E4\", \"G4\", \"B4\"], \"F4\", [\"F4\", \"A4\", \"C5\"]]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.active ? \"Stop\" : \"Play\")));\n  }\n\n}","map":{"version":3,"sources":["/home/fvrh/Documentos/week8/bbrss/src/SynthComponent.js"],"names":["React","Component","CircularInput","CircularTrack","CircularProgress","CircularThumb","SynthComponent","oscTypes","state","id","oscillator","type","envelope","attack","decay","sustain","release","componentDidMount","setState","props","idx","active","updateEnvelope","envKey","newValue","newEnvelope","updateSynth","updateOscillator","newOscillator","_oscillator","_type","console","log","playNotes","note","playSynth","render","envelopeControls","e","map","oscType","toUpperCase","Object","entries","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  CircularInput,\n  CircularTrack,\n  CircularProgress,\n  CircularThumb\n} from \"react-circular-input\";\n\nexport default class SynthComponent extends Component {\n  oscTypes = [\"triangle\", \"sine\", \"saw\", \"square\"];\n\n  state = {\n    id: null,\n    oscillator: {\n      type: \"triangle\"\n    },\n    envelope: {\n      attack: 0.005,\n      decay: 0.1,\n      sustain: 0.3,\n      release: 1\n    }\n  };\n\n  componentDidMount() {\n    this.setState({\n      ...this.state,\n      id: this.props.idx,\n      oscillator: this.props.oscillator,\n      envelope: this.props.envelope,\n      active: false\n    });\n  }\n\n  updateEnvelope(envKey, newValue) {\n    const newEnvelope = { ...this.state.envelope };\n    newEnvelope[envKey] = newValue;\n    this.setState({\n      ...this.state,\n      envelope: newEnvelope\n    });\n    this.updateSynth();\n  }\n\n  updateOscillator(newValue) {\n    const newOscillator = { ...this.state.oscillator };\n    newOscillator._oscillator._type = newValue;\n    this.setState({\n      ...this.state,\n      oscillator: newOscillator\n    });\n    this.updateSynth();\n  }\n\n  updateSynth() {\n      console.log(this.state.oscillator);\n    this.props.updateSynth(this.state.id, {\n      envelope: { ...this.state.envelope },\n      oscillator: { ...this.state.oscillator }\n    });\n  }\n\n  playNotes(note) {\n    this.props.playSynth(this.state.id, note);\n    this.setState({\n      ...this.state,\n      active: !this.state.active\n    });\n  }\n\n  render() {\n    //Envelope controllers\n    const { attack, decay, sustain, release } = this.state.envelope;\n    const envelopeControls = { attack, decay, sustain, release };\n    return (\n      <div className=\"synth\">\n        <div className=\"oscillator-controls\">\n          <select\n            id={`osc-select-${this.state.id}`}\n            onChange={e => this.updateOscillator(e)}\n          >\n            {this.oscTypes.map(oscType => (\n              <option key={oscType} value={oscType}>\n                {oscType.toUpperCase()}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"envelope-controls\">\n          {Object.entries(envelopeControls).map(value => {\n            return (\n              <CircularInput\n                key={value[0]}\n                radius={35}\n                value={value[1]}\n                onChange={e => this.updateEnvelope(value[0], e)}\n              >\n                <CircularTrack strokeWidth={3} />\n                <CircularProgress strokeWidth={5} />\n                <CircularThumb r={4} />\n              </CircularInput>\n            );\n          })}\n          <button\n            onClick={() =>\n              this.playNotes([\n                \"E4\",\n                [\"E4\", \"G4\", \"B4\"],\n                \"F4\",\n                [\"F4\", \"A4\", \"C5\"]\n              ])\n            }\n          >\n            {this.state.active ? \"Stop\" : \"Play\"}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}